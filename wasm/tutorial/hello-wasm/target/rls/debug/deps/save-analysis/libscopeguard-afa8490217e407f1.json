{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3","program":"/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","scopeguard","/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=afa8490217e407f1","-C","extra-filename=-afa8490217e407f1","--out-dir","/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","-L","dependency=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libscopeguard-afa8490217e407f1.rmeta"},"prelude":{"crate_id":{"name":"scopeguard","disambiguator":[12282018462781743967,0]},"crate_root":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src","external_crates":[{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}}],"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":0,"byte_end":11606,"line_start":1,"line_end":409,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":0,"byte_end":11606,"line_start":1,"line_end":409,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":31},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":45},{"krate":0,"index":50},{"krate":0,"index":55}],"decl_id":null,"docs":" A scope guard will run a given closure when it goes out of scope,\n even if the code between panics.\n (as long as panic doesn't abort)","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":49,"byte_end":55,"line_start":1,"line_end":1,"column_start":50,"column_end":56}},{"value":"/ A scope guard will run a given closure when it goes out of scope,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":59,"byte_end":128,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ even if the code between panics.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":129,"byte_end":165,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/ (as long as panic doesn't abort)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":166,"byte_end":202,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":203,"byte_end":206,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":207,"byte_end":221,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":222,"byte_end":225,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## `defer!`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":226,"byte_end":241,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":242,"byte_end":245,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Use the `defer` macro to run an operation at scope exit,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":246,"byte_end":306,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ either regular scope exit or during unwinding from a panic.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":307,"byte_end":370,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":371,"byte_end":374,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":375,"byte_end":382,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ #[macro_use(defer)] extern crate scopeguard;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":383,"byte_end":431,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":432,"byte_end":435,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":436,"byte_end":460,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":461,"byte_end":464,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":465,"byte_end":480,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/     // use a cell to observe drops during and after the scope guard is active","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":481,"byte_end":562,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/     let drop_counter = Cell::new(0);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":563,"byte_end":603,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/     {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":604,"byte_end":613,"line_start":22,"line_end":22,"column_start":1,"column_end":10}},{"value":"/         // Create a scope guard using `defer!` for the current scope","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":614,"byte_end":686,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/         defer! {{","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":687,"byte_end":708,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/             drop_counter.set(1 + drop_counter.get());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":709,"byte_end":766,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/         }};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":767,"byte_end":782,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":783,"byte_end":786,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/         // Do regular operations here in the meantime.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":787,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/         // Just before scope exit: it hasn't run yet.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":850,"byte_end":907,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/         assert_eq!(drop_counter.get(), 0);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":908,"byte_end":954,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":955,"byte_end":958,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         // The following scope end is where the defer closure is called","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":959,"byte_end":1034,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1035,"byte_end":1044,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/     assert_eq!(drop_counter.get(), 1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1045,"byte_end":1087,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1088,"byte_end":1093,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1094,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Scope Guard with Value","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1106,"byte_end":1135,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1136,"byte_end":1139,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If the scope guard closure needs to access an outer value that is also","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1140,"byte_end":1214,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ mutated outside of the scope guard, then you may want to use the scope guard","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1215,"byte_end":1295,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ with a value. The guard works like a smart pointer, so the inner value can","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1296,"byte_end":1374,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ be accessed by reference or by mutable reference.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1375,"byte_end":1428,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1429,"byte_end":1432,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### 1. The guard owns a file","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1433,"byte_end":1465,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1466,"byte_end":1469,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ In this example, the scope guard owns a file and ensures pending writes are","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1470,"byte_end":1549,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ synced at scope exit.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1550,"byte_end":1575,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1576,"byte_end":1579,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1580,"byte_end":1587,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ extern crate scopeguard;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1588,"byte_end":1616,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ ","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1617,"byte_end":1621,"line_start":53,"line_end":53,"column_start":1,"column_end":5}},{"value":"/ use std::fs::File;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1622,"byte_end":1644,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1645,"byte_end":1676,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1677,"byte_end":1681,"line_start":56,"line_end":56,"column_start":1,"column_end":5}},{"value":"/ fn try_main() -> io::Result<()> {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1682,"byte_end":1719,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/     let f = File::create(\"newfile.txt\")?;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1720,"byte_end":1765,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/     let mut file = scopeguard::guard(f, |f| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1766,"byte_end":1815,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/         // ensure we flush file at return or panic","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1816,"byte_end":1870,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/         let _ = f.sync_all();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1871,"byte_end":1904,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1905,"byte_end":1916,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/     // Access the file through the scope guard itself","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1917,"byte_end":1974,"line_start":63,"line_end":63,"column_start":1,"column_end":58}},{"value":"/     file.write(b\"test me\\n\").map(|_| ())","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":1975,"byte_end":2019,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2020,"byte_end":2025,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2026,"byte_end":2029,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2030,"byte_end":2045,"line_start":67,"line_end":67,"column_start":1,"column_end":16}},{"value":"/     try_main().unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2046,"byte_end":2074,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2075,"byte_end":2080,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2081,"byte_end":2084,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2085,"byte_end":2092,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2093,"byte_end":2096,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ### 2. The guard restores an invariant on scope exit","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2097,"byte_end":2153,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2154,"byte_end":2157,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2158,"byte_end":2165,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ extern crate scopeguard;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2166,"byte_end":2194,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2195,"byte_end":2198,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2199,"byte_end":2230,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/ use std::ptr;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2231,"byte_end":2248,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2249,"byte_end":2252,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // This function, just for this example, takes the first element","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2253,"byte_end":2321,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ // and inserts it into the assumed sorted tail of the vector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2322,"byte_end":2387,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ //","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2388,"byte_end":2394,"line_start":83,"line_end":83,"column_start":1,"column_end":7}},{"value":"/ // For optimization purposes we temporarily violate an invariant of the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2395,"byte_end":2470,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ // Vec, that it owns all of its elements.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2471,"byte_end":2516,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ // ","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2517,"byte_end":2524,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/ // The safe approach is to use swap, which means two writes to memory,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2525,"byte_end":2599,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ // the optimization is to use a “hole” which uses only one write of memory","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2600,"byte_end":2682,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/ // for each position it moves.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2683,"byte_end":2717,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ //","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2718,"byte_end":2724,"line_start":90,"line_end":90,"column_start":1,"column_end":7}},{"value":"/ // We *must* use a scope guard to run this code safely. We","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2725,"byte_end":2787,"line_start":91,"line_end":91,"column_start":1,"column_end":63}},{"value":"/ // are running arbitrary user code (comparison operators) that may panic.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2788,"byte_end":2865,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/ // The scope guard ensures we restore the invariant after successful","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2866,"byte_end":2938,"line_start":93,"line_end":93,"column_start":1,"column_end":73}},{"value":"/ // exit or during unwinding from panic.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2939,"byte_end":2982,"line_start":94,"line_end":94,"column_start":1,"column_end":44}},{"value":"/ fn insertion_sort_first<T>(v: &mut Vec<T>)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":2983,"byte_end":3029,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/     where T: PartialOrd","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3030,"byte_end":3057,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"/ {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3058,"byte_end":3063,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/     struct Hole<'a, T: 'a> {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3064,"byte_end":3096,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/         v: &'a mut Vec<T>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3097,"byte_end":3127,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/         index: usize,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3128,"byte_end":3153,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/         value: ManuallyDrop<T>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3154,"byte_end":3189,"line_start":101,"line_end":101,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3190,"byte_end":3199,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3200,"byte_end":3203,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3204,"byte_end":3220,"line_start":104,"line_end":104,"column_start":1,"column_end":17}},{"value":"/         // Create a moved-from location in the vector, a “hole”.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3221,"byte_end":3293,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/         let value = ptr::read(&v[0]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3294,"byte_end":3335,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/         let mut hole = Hole { v: v, index: 0, value: ManuallyDrop::new(value) };","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3336,"byte_end":3420,"line_start":107,"line_end":107,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3421,"byte_end":3424,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Use a scope guard with a value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3425,"byte_end":3471,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/         // At scope exit, plug the hole so that the vector is fully","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3472,"byte_end":3543,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/         // initialized again.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3544,"byte_end":3577,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         // The scope guard owns the hole, but we can access it through the guard.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3578,"byte_end":3663,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/         let mut hole_guard = scopeguard::guard(hole, |hole| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3664,"byte_end":3729,"line_start":113,"line_end":113,"column_start":1,"column_end":66}},{"value":"/             // plug the hole in the vector with the value that was // taken out","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3730,"byte_end":3813,"line_start":114,"line_end":114,"column_start":1,"column_end":84}},{"value":"/             let index = hole.index;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3814,"byte_end":3853,"line_start":115,"line_end":115,"column_start":1,"column_end":40}},{"value":"/             ptr::copy_nonoverlapping(&*hole.value, &mut hole.v[index], 1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3854,"byte_end":3932,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/         });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3933,"byte_end":3948,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3949,"byte_end":3952,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // run algorithm that moves the hole in the vector here","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":3953,"byte_end":4020,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/         // move the hole until it's in a sorted position","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4021,"byte_end":4081,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/         for i in 1..hole_guard.v.len() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4082,"byte_end":4126,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/             if *hole_guard.value >= hole_guard.v[i] {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4127,"byte_end":4184,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/                 // move the element back and the hole forward","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4185,"byte_end":4250,"line_start":123,"line_end":123,"column_start":1,"column_end":66}},{"value":"/                 let index = hole_guard.index;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4251,"byte_end":4300,"line_start":124,"line_end":124,"column_start":1,"column_end":50}},{"value":"/                 ptr::copy_nonoverlapping(&hole_guard.v[index + 1], &mut hole_guard.v[index], 1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4301,"byte_end":4401,"line_start":125,"line_end":125,"column_start":1,"column_end":101}},{"value":"/                 hole_guard.index += 1;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4402,"byte_end":4444,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/             } else {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4445,"byte_end":4469,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/                 break;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4470,"byte_end":4496,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4497,"byte_end":4514,"line_start":129,"line_end":129,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4515,"byte_end":4528,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4529,"byte_end":4532,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // When the scope exits here, the Vec becomes whole again!","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4533,"byte_end":4603,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4604,"byte_end":4613,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4614,"byte_end":4619,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4620,"byte_end":4623,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4624,"byte_end":4639,"line_start":136,"line_end":136,"column_start":1,"column_end":16}},{"value":"/     let string = String::from;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4640,"byte_end":4674,"line_start":137,"line_end":137,"column_start":1,"column_end":35}},{"value":"/     let mut data = vec![string(\"c\"), string(\"a\"), string(\"b\"), string(\"d\")];","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4675,"byte_end":4755,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/     insertion_sort_first(&mut data);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4756,"byte_end":4796,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(data, vec![\"a\", \"b\", \"c\", \"d\"]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4797,"byte_end":4848,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4849,"byte_end":4854,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4855,"byte_end":4858,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4859,"byte_end":4866,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4867,"byte_end":4870,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Crate features:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4875,"byte_end":4896,"line_start":146,"line_end":146,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4897,"byte_end":4900,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ - `use_std`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4901,"byte_end":4916,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/   + Enabled by default. Enables the `OnUnwind` strategy.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4917,"byte_end":4977,"line_start":149,"line_end":149,"column_start":1,"column_end":61}},{"value":"/   + Disable to use `no_std`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":4978,"byte_end":5010,"line_start":150,"line_end":150,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5171,"byte_end":5179,"line_start":159,"line_end":159,"column_start":11,"column_end":19},"name":"Strategy","qualname":"::Strategy","value":"Strategy","parent":null,"children":[{"krate":0,"index":19}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5309,"byte_end":5319,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"should_run","qualname":"::Strategy::should_run","value":"pub fn should_run() -> bool","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Return `true` if the guard’s associated code should run\n (in the context where this method is called).\n","sig":null,"attributes":[{"value":"/ Return `true` if the guard’s associated code should run","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5186,"byte_end":5247,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ (in the context where this method is called).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5252,"byte_end":5301,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":60},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5580,"byte_end":5586,"line_start":171,"line_end":171,"column_start":10,"column_end":16},"name":"Always","qualname":"::Always","value":"pub enum Always { }","parent":null,"children":[],"decl_id":null,"docs":" Always run on scope exit.","sig":null,"attributes":[{"value":"/ Always run on scope exit.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5334,"byte_end":5363,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5364,"byte_end":5367,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ “Always” run: on regular exit from a scope or on unwinding from a panic.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5368,"byte_end":5448,"line_start":167,"line_end":167,"column_start":1,"column_end":77}},{"value":"/ Can not run on abort, process exit, and other catastrophic events where","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5449,"byte_end":5524,"line_start":168,"line_end":168,"column_start":1,"column_end":76}},{"value":"/ destructors don’t run.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5525,"byte_end":5553,"line_start":169,"line_end":169,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8053,"byte_end":8063,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"ScopeGuard","qualname":"::ScopeGuard","value":"ScopeGuard {  }","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" `ScopeGuard` is a scope guard that may own a protected value.","sig":null,"attributes":[{"value":"/ `ScopeGuard` is a scope guard that may own a protected value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7420,"byte_end":7485,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7486,"byte_end":7489,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ If you place a guard in a local variable, the closure can","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7490,"byte_end":7551,"line_start":248,"line_end":248,"column_start":1,"column_end":62}},{"value":"/ run regardless how you leave the scope — through regular return or panic","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7552,"byte_end":7630,"line_start":249,"line_end":249,"column_start":1,"column_end":77}},{"value":"/ (except if panic or other code aborts; so as long as destructors run).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7631,"byte_end":7705,"line_start":250,"line_end":250,"column_start":1,"column_end":75}},{"value":"/ It is run only once.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7706,"byte_end":7730,"line_start":251,"line_end":251,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7731,"byte_end":7734,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The `S` parameter for [`Strategy`](Strategy.t.html) determines if","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7735,"byte_end":7804,"line_start":253,"line_end":253,"column_start":1,"column_end":70}},{"value":"/ the closure actually runs.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7805,"byte_end":7835,"line_start":254,"line_end":254,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7836,"byte_end":7839,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ The guard's closure will be called with a mut ref to the held value","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7840,"byte_end":7911,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"/ in the destructor. It's called only once.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7912,"byte_end":7957,"line_start":257,"line_end":257,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7958,"byte_end":7961,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ The `ScopeGuard` implements `Deref` so that you can access the inner value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":7962,"byte_end":8041,"line_start":259,"line_end":259,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8507,"byte_end":8520,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"with_strategy","qualname":"<ScopeGuard<T, F, S>>::with_strategy","value":"pub fn with_strategy(T, F) -> ScopeGuard<T, F, S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `ScopeGuard` that owns `v` (accessible through deref) and calls\n `dropfn` when its destructor runs.","sig":null,"attributes":[{"value":"/ Create a `ScopeGuard` that owns `v` (accessible through deref) and calls","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8277,"byte_end":8353,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ `dropfn` when its destructor runs.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8358,"byte_end":8396,"line_start":272,"line_end":272,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8401,"byte_end":8404,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The `Strategy` decides whether the scope guard's closure should run.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8409,"byte_end":8481,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8486,"byte_end":8495,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8787,"byte_end":8792,"line_start":288,"line_end":288,"column_start":8,"column_end":13},"name":"guard","qualname":"::guard","value":"pub fn guard<T, F>(T, F) -> ScopeGuard<T, F, Always> where F: FnMut(&mut T) ->\n()","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.\n","sig":null,"attributes":[{"value":"/ Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8693,"byte_end":8769,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8770,"byte_end":8779,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5929,"byte_end":5935,"line_start":188,"line_end":188,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8200,"byte_end":8210,"line_start":267,"line_end":267,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9574,"byte_end":9584,"line_start":317,"line_end":317,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9741,"byte_end":9751,"line_start":327,"line_end":327,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9898,"byte_end":9908,"line_start":335,"line_end":335,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":10096,"byte_end":10106,"line_start":345,"line_end":345,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":5929,"byte_end":5935,"line_start":188,"line_end":188,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":18}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":8200,"byte_end":8210,"line_start":267,"line_end":267,"column_start":15,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9574,"byte_end":9584,"line_start":317,"line_end":317,"column_start":35,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":3227}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9741,"byte_end":9751,"line_start":327,"line_end":327,"column_start":38,"column_end":48},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":3240}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":9898,"byte_end":9908,"line_start":335,"line_end":335,"column_start":34,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs","byte_start":10096,"byte_end":10106,"line_start":345,"line_end":345,"column_start":30,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":9394}}]}