{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3","program":"/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","siphasher","/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=3ca0de172921a10f","-C","extra-filename=-3ca0de172921a10f","--out-dir","/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","-L","dependency=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libsiphasher-3ca0de172921a10f.rmeta"},"prelude":{"crate_id":{"name":"siphasher","disambiguator":[16303465558578890623,0]},"crate_root":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src","external_crates":[{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}}],"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","byte_start":0,"byte_end":147,"line_start":1,"line_end":13,"column_start":1,"column_end":14}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","byte_start":0,"byte_end":147,"line_start":1,"line_end":13,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","byte_start":23,"byte_end":29,"line_start":1,"line_end":1,"column_start":24,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sip","qualname":"::sip","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":64},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":67}],"decl_id":null,"docs":" An implementation of SipHash.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":621,"byte_end":654,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":897,"byte_end":908,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"SipHasher13","qualname":"::sip::SipHasher13","value":"SipHasher13 {  }","parent":null,"children":[{"krate":0,"index":155}],"decl_id":null,"docs":" An implementation of SipHash 1-3.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 1-3.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":766,"byte_end":803,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":804,"byte_end":807,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See: <https://131002.net/siphash/>","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":808,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1078,"byte_end":1089,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"SipHasher24","qualname":"::sip::SipHasher24","value":"SipHasher24 {  }","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" An implementation of SipHash 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 2-4.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":947,"byte_end":984,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":985,"byte_end":988,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ See: <https://131002.net/siphash/>","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":989,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1776,"byte_end":1785,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"SipHasher","qualname":"::sip::SipHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of SipHash 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash 2-4.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1128,"byte_end":1165,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1166,"byte_end":1169,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See: <https://131002.net/siphash/>","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1170,"byte_end":1208,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1209,"byte_end":1212,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ SipHash is a general-purpose hashing function: it runs at a good","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1213,"byte_end":1281,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ speed (competitive with Spooky and City) and permits strong _keyed_","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1282,"byte_end":1353,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ hashing. This lets you key your hashtables from a strong RNG, such as","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1354,"byte_end":1427,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ [`rand::os::OsRng`](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1428,"byte_end":1510,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1511,"byte_end":1514,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Although the SipHash algorithm is considered to be generally strong,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1515,"byte_end":1587,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is not intended for cryptographic purposes. As such, all","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1588,"byte_end":1651,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/ cryptographic uses of this implementation are _strongly discouraged_.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":1652,"byte_end":1725,"line_start":47,"line_end":47,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4467,"byte_end":4470,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher>::new","value":"pub fn new() -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4376,"byte_end":4441,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4446,"byte_end":4455,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4626,"byte_end":4639,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4538,"byte_end":4600,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4605,"byte_end":4614,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4794,"byte_end":4798,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4746,"byte_end":4782,"line_start":143,"line_end":143,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4992,"byte_end":4995,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher13>::new","value":"pub fn new() -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher13` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher13` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4899,"byte_end":4966,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4971,"byte_end":4980,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5157,"byte_end":5170,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher13>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher13` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher13` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5067,"byte_end":5131,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5136,"byte_end":5145,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5356,"byte_end":5360,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher13>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5308,"byte_end":5344,"line_start":164,"line_end":164,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5550,"byte_end":5553,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher24>::new","value":"pub fn new() -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher24` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher24` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5457,"byte_end":5524,"line_start":171,"line_end":171,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5529,"byte_end":5538,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5715,"byte_end":5728,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher24>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher24` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher24` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5625,"byte_end":5689,"line_start":177,"line_end":177,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5694,"byte_end":5703,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5914,"byte_end":5918,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher24>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5866,"byte_end":5902,"line_start":185,"line_end":185,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sip128","qualname":"::sip128","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":144},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":147},{"krate":0,"index":150}],"decl_id":null,"docs":" An implementation of SipHash with a 128-bit output.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash with a 128-bit output.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":11980,"byte_end":12035,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12230,"byte_end":12237,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Hash128","qualname":"::sip128::Hash128","value":"Hash128 { h1, h2 }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" A 128-bit (2x64) hash output\n","sig":null,"attributes":[{"value":"/ A 128-bit (2x64) hash output","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12147,"byte_end":12179,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12248,"byte_end":12250,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"h1","qualname":"::sip128::Hash128::h1","value":"u64","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12265,"byte_end":12267,"line_start":24,"line_end":24,"column_start":9,"column_end":11},"name":"h2","qualname":"::sip128::Hash128::h2","value":"u64","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12368,"byte_end":12379,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"SipHasher13","qualname":"::sip128::SipHasher13","value":"SipHasher13 {  }","parent":null,"children":[{"krate":0,"index":238}],"decl_id":null,"docs":" An implementation of SipHash128 1-3.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 1-3.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12277,"byte_end":12317,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12509,"byte_end":12520,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"SipHasher24","qualname":"::sip128::SipHasher24","value":"SipHasher24 {  }","parent":null,"children":[{"krate":0,"index":247}],"decl_id":null,"docs":" An implementation of SipHash128 2-4.\n","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 2-4.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12418,"byte_end":12458,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":13167,"byte_end":13176,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"SipHasher","qualname":"::sip128::SipHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of SipHash128 2-4.","sig":null,"attributes":[{"value":"/ An implementation of SipHash128 2-4.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12559,"byte_end":12599,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12600,"byte_end":12603,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ SipHash is a general-purpose hashing function: it runs at a good","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12604,"byte_end":12672,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ speed (competitive with Spooky and City) and permits strong _keyed_","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12673,"byte_end":12744,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ hashing. This lets you key your hashtables from a strong RNG, such as","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12745,"byte_end":12818,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ [`rand::os::OsRng`](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12819,"byte_end":12901,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12902,"byte_end":12905,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Although the SipHash algorithm is considered to be generally strong,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12906,"byte_end":12978,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ it is not intended for cryptographic purposes. As such, all","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":12979,"byte_end":13042,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/ cryptographic uses of this implementation are _strongly discouraged_.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":13043,"byte_end":13116,"line_start":48,"line_end":48,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15749,"byte_end":15758,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"name":"Hasher128","qualname":"::sip128::Hasher128","value":"Hasher128","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15798,"byte_end":15807,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"finish128","qualname":"::sip128::Hasher128::finish128","value":"pub fn finish128(&Self) -> Hash128","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Return a 128-bit hash\n","sig":null,"attributes":[{"value":"/ Return a 128-bit hash","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15765,"byte_end":15790,"line_start":132,"line_end":132,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15942,"byte_end":15945,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher>::new","value":"pub fn new() -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15851,"byte_end":15916,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15921,"byte_end":15930,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16101,"byte_end":16114,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16013,"byte_end":16075,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16080,"byte_end":16089,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16269,"byte_end":16273,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16221,"byte_end":16257,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16615,"byte_end":16618,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher13>::new","value":"pub fn new() -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher13` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher13` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16522,"byte_end":16589,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16594,"byte_end":16603,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16780,"byte_end":16793,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher13>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher13","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher13` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher13` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16690,"byte_end":16754,"line_start":170,"line_end":170,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16759,"byte_end":16768,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16979,"byte_end":16983,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher13>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16931,"byte_end":16967,"line_start":178,"line_end":178,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17328,"byte_end":17331,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<SipHasher24>::new","value":"pub fn new() -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SipHasher24` with the two initial keys set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `SipHasher24` with the two initial keys set to 0.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17235,"byte_end":17302,"line_start":193,"line_end":193,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17307,"byte_end":17316,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17493,"byte_end":17506,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<SipHasher24>::new_with_keys","value":"pub fn new_with_keys(u64, u64) -> SipHasher24","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SipHasher24` that is keyed off the provided keys.\n","sig":null,"attributes":[{"value":"/ Creates a `SipHasher24` that is keyed off the provided keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17403,"byte_end":17467,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17472,"byte_end":17481,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17692,"byte_end":17696,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"keys","qualname":"<SipHasher24>::keys","value":"pub fn keys(&Self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Get the keys used by this hasher\n","sig":null,"attributes":[{"value":"/ Get the keys used by this hasher","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17644,"byte_end":17680,"line_start":207,"line_end":207,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":24120,"byte_end":24128,"line_start":472,"line_end":472,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash128>::as_bytes","value":"pub fn as_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 16-bytes vector\n","sig":null,"attributes":[{"value":"/ Convert into a 16-bytes vector","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":24074,"byte_end":24108,"line_start":471,"line_end":471,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4360,"byte_end":4369,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4881,"byte_end":4892,"line_start":149,"line_end":149,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5439,"byte_end":5450,"line_start":170,"line_end":170,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":6005,"byte_end":6011,"line_start":191,"line_end":191,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8062,"byte_end":8071,"line_start":254,"line_end":254,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8258,"byte_end":8269,"line_start":266,"line_end":266,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8466,"byte_end":8477,"line_start":278,"line_end":278,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8682,"byte_end":8688,"line_start":290,"line_end":290,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":10575,"byte_end":10581,"line_start":363,"line_end":363,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":10911,"byte_end":10922,"line_start":380,"line_end":380,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":11220,"byte_end":11231,"line_start":397,"line_end":397,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15835,"byte_end":15844,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16370,"byte_end":16379,"line_start":155,"line_end":155,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16504,"byte_end":16515,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17076,"byte_end":17087,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17217,"byte_end":17228,"line_start":192,"line_end":192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17789,"byte_end":17800,"line_start":213,"line_end":213,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17938,"byte_end":17944,"line_start":221,"line_end":221,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":19989,"byte_end":19995,"line_start":284,"line_end":284,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20550,"byte_end":20559,"line_start":307,"line_end":307,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20746,"byte_end":20757,"line_start":319,"line_end":319,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20954,"byte_end":20965,"line_start":331,"line_end":331,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":21170,"byte_end":21176,"line_start":343,"line_end":343,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":22791,"byte_end":22797,"line_start":405,"line_end":405,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23122,"byte_end":23128,"line_start":420,"line_end":420,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23458,"byte_end":23469,"line_start":437,"line_end":437,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23767,"byte_end":23778,"line_start":454,"line_end":454,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":24060,"byte_end":24067,"line_start":470,"line_end":470,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","byte_start":74,"byte_end":77,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/lib.rs","byte_start":87,"byte_end":93,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":70}}],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4360,"byte_end":4369,"line_start":130,"line_end":130,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":4881,"byte_end":4892,"line_start":149,"line_end":149,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":5439,"byte_end":5450,"line_start":170,"line_end":170,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":6005,"byte_end":6011,"line_start":191,"line_end":191,"column_start":14,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8062,"byte_end":8071,"line_start":254,"line_end":254,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8258,"byte_end":8269,"line_start":266,"line_end":266,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8466,"byte_end":8477,"line_start":278,"line_end":278,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":8682,"byte_end":8688,"line_start":290,"line_end":290,"column_start":31,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":10575,"byte_end":10581,"line_start":363,"line_end":363,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":10911,"byte_end":10922,"line_start":380,"line_end":380,"column_start":14,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":61}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip.rs","byte_start":11220,"byte_end":11231,"line_start":397,"line_end":397,"column_start":14,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":218},"to":{"krate":0,"index":61}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":15835,"byte_end":15844,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16370,"byte_end":16379,"line_start":155,"line_end":155,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":92}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":16504,"byte_end":16515,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17076,"byte_end":17087,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":237},"to":{"krate":0,"index":92}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17217,"byte_end":17228,"line_start":192,"line_end":192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17789,"byte_end":17800,"line_start":213,"line_end":213,"column_start":20,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":92}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":17938,"byte_end":17944,"line_start":221,"line_end":221,"column_start":14,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":19989,"byte_end":19995,"line_start":284,"line_end":284,"column_start":14,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20550,"byte_end":20559,"line_start":307,"line_end":307,"column_start":23,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20746,"byte_end":20757,"line_start":319,"line_end":319,"column_start":23,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":20954,"byte_end":20965,"line_start":331,"line_end":331,"column_start":23,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":21170,"byte_end":21176,"line_start":343,"line_end":343,"column_start":31,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":265},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":22791,"byte_end":22797,"line_start":405,"line_end":405,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":265},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23122,"byte_end":23128,"line_start":420,"line_end":420,"column_start":26,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":265},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23458,"byte_end":23469,"line_start":437,"line_end":437,"column_start":14,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":289},"to":{"krate":0,"index":141}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":23767,"byte_end":23778,"line_start":454,"line_end":454,"column_start":14,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":298},"to":{"krate":0,"index":141}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/siphasher-0.2.3/src/sip128.rs","byte_start":24060,"byte_end":24067,"line_start":470,"line_end":470,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}}]}