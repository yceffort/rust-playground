{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2","program":"/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=09fb979b03643ef4","-C","extra-filename=-09fb979b03643ef4","--out-dir","/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","-L","dependency=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","--extern","cfg_if=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libcfg_if-b5167c67a271ba5c.rmeta","--extern","crossbeam_utils=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libcrossbeam_utils-114cd3778e8e99ff.rmeta","--extern","lazy_static=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/liblazy_static-bc2f47adaad103e9.rmeta","--extern","maybe_uninit=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libmaybe_uninit-30aebc8306778571.rmeta","--extern","memoffset=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libmemoffset-5bb1529005ff4d52.rmeta","--extern","scopeguard=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libscopeguard-7b1ddd2bc808ce25.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libcrossbeam_epoch-09fb979b03643ef4.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[9576196965766364502,0]},"crate_root":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src","external_crates":[{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[7879117599102050047,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":21,"id":{"name":"maybe_uninit","disambiguator":[7906545196224725377,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[15897916549716219684,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":23,"id":{"name":"lazy_static","disambiguator":[9708458161320227382,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":24,"id":{"name":"memoffset","disambiguator":[13749579562461512186,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","num":25,"id":{"name":"scopeguard","disambiguator":[6650698705809014761,0]}}],"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3757,"byte_end":3763,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3765,"byte_end":3783,"line_start":94,"line_end":94,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3785,"byte_end":3806,"line_start":94,"line_end":94,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3808,"byte_end":3813,"line_start":94,"line_end":94,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3815,"byte_end":3822,"line_start":94,"line_end":94,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3824,"byte_end":3830,"line_start":94,"line_end":94,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3867,"byte_end":3876,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3878,"byte_end":3889,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3922,"byte_end":3933,"line_start":96,"line_end":96,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":3935,"byte_end":3940,"line_start":96,"line_end":96,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":4104,"byte_end":4121,"line_start":106,"line_end":106,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":4123,"byte_end":4132,"line_start":106,"line_end":106,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":4134,"byte_end":4137,"line_start":106,"line_end":106,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":271},{"krate":0,"index":312},{"krate":0,"index":348},{"krate":0,"index":368},{"krate":0,"index":413},{"krate":0,"index":552},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [`Collector`]: struct.Collector.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2821,"byte_end":2866,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2868,"byte_end":2890,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/lib.rs","byte_start":2891,"byte_end":2930,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12864789,"byte_end":12864807,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12864718,"byte_end":12864777,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12864921,"byte_end":12864928,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12864840,"byte_end":12864912,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865014,"byte_end":12865017,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12864950,"byte_end":12865005,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865902,"byte_end":12865923,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865332,"byte_end":12865384,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865385,"byte_end":12865388,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865389,"byte_end":12865480,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865481,"byte_end":12865573,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865574,"byte_end":12865577,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865578,"byte_end":12865643,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865644,"byte_end":12865647,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865648,"byte_end":12865742,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865743,"byte_end":12865769,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865770,"byte_end":12865862,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865863,"byte_end":12865891,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865989,"byte_end":12865996,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865930,"byte_end":12865981,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866214,"byte_end":12866221,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866022,"byte_end":12866070,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866075,"byte_end":12866078,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866083,"byte_end":12866176,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866181,"byte_end":12866206,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867993,"byte_end":12867999,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867554,"byte_end":12867618,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867619,"byte_end":12867622,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867623,"byte_end":12867721,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867722,"byte_end":12867814,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867815,"byte_end":12867859,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867860,"byte_end":12867863,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867864,"byte_end":12867944,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867945,"byte_end":12867948,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12867949,"byte_end":12867981,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869001,"byte_end":12869005,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868773,"byte_end":12868811,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868816,"byte_end":12868819,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868824,"byte_end":12868838,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868843,"byte_end":12868846,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868851,"byte_end":12868858,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868863,"byte_end":12868895,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868900,"byte_end":12868903,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868908,"byte_end":12868942,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868947,"byte_end":12868954,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868959,"byte_end":12868983,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869365,"byte_end":12869368,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869132,"byte_end":12869214,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869219,"byte_end":12869222,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869227,"byte_end":12869241,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869246,"byte_end":12869249,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869254,"byte_end":12869261,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869266,"byte_end":12869298,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869303,"byte_end":12869306,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869311,"byte_end":12869341,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869346,"byte_end":12869353,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869992,"byte_end":12869996,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869443,"byte_end":12869488,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869493,"byte_end":12869496,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869501,"byte_end":12869591,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869596,"byte_end":12869610,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869615,"byte_end":12869618,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869623,"byte_end":12869701,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869706,"byte_end":12869709,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869714,"byte_end":12869728,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869733,"byte_end":12869736,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869741,"byte_end":12869748,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869753,"byte_end":12869802,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869807,"byte_end":12869851,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869856,"byte_end":12869859,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869864,"byte_end":12869894,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869899,"byte_end":12869929,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869934,"byte_end":12869968,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12869973,"byte_end":12869980,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871003,"byte_end":12871015,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870126,"byte_end":12870205,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870210,"byte_end":12870213,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870218,"byte_end":12870291,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870296,"byte_end":12870372,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870377,"byte_end":12870448,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870453,"byte_end":12870527,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870532,"byte_end":12870555,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870560,"byte_end":12870563,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870568,"byte_end":12870643,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870648,"byte_end":12870722,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870727,"byte_end":12870761,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870766,"byte_end":12870769,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870774,"byte_end":12870788,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870793,"byte_end":12870796,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870801,"byte_end":12870808,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870813,"byte_end":12870862,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870867,"byte_end":12870870,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870875,"byte_end":12870905,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870910,"byte_end":12870940,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870945,"byte_end":12870979,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12870984,"byte_end":12870991,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871729,"byte_end":12871734,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<'g, P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871135,"byte_end":12871200,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871205,"byte_end":12871208,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871213,"byte_end":12871303,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871308,"byte_end":12871322,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871327,"byte_end":12871330,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871335,"byte_end":12871413,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871418,"byte_end":12871421,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871426,"byte_end":12871440,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871445,"byte_end":12871448,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871453,"byte_end":12871460,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871465,"byte_end":12871529,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871534,"byte_end":12871578,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871583,"byte_end":12871586,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871591,"byte_end":12871621,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871626,"byte_end":12871662,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871667,"byte_end":12871705,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871710,"byte_end":12871717,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872486,"byte_end":12872490,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871845,"byte_end":12871933,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871938,"byte_end":12871951,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871956,"byte_end":12871959,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12871964,"byte_end":12872054,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872059,"byte_end":12872073,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872078,"byte_end":12872081,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872086,"byte_end":12872164,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872169,"byte_end":12872172,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872177,"byte_end":12872191,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872196,"byte_end":12872199,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872204,"byte_end":12872211,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872216,"byte_end":12872280,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872285,"byte_end":12872329,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872334,"byte_end":12872337,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872342,"byte_end":12872372,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872377,"byte_end":12872407,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872412,"byte_end":12872462,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872467,"byte_end":12872474,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873837,"byte_end":12873852,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872661,"byte_end":12872757,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872762,"byte_end":12872856,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872861,"byte_end":12872932,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872937,"byte_end":12872940,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12872945,"byte_end":12873040,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873045,"byte_end":12873136,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873141,"byte_end":12873154,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873159,"byte_end":12873162,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873167,"byte_end":12873252,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873257,"byte_end":12873288,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873293,"byte_end":12873296,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873301,"byte_end":12873364,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873369,"byte_end":12873372,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873377,"byte_end":12873391,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873396,"byte_end":12873399,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873404,"byte_end":12873411,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873416,"byte_end":12873480,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873485,"byte_end":12873529,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873534,"byte_end":12873537,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873542,"byte_end":12873572,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873577,"byte_end":12873580,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873585,"byte_end":12873615,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873620,"byte_end":12873661,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873666,"byte_end":12873736,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873741,"byte_end":12873813,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12873818,"byte_end":12873825,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876403,"byte_end":12876423,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874517,"byte_end":12874613,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874618,"byte_end":12874712,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874717,"byte_end":12874788,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874793,"byte_end":12874796,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874801,"byte_end":12874895,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12874900,"byte_end":12874995,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875000,"byte_end":12875090,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875095,"byte_end":12875179,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875184,"byte_end":12875187,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875192,"byte_end":12875277,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875282,"byte_end":12875313,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875318,"byte_end":12875321,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875326,"byte_end":12875392,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875397,"byte_end":12875460,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875465,"byte_end":12875468,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875473,"byte_end":12875487,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875492,"byte_end":12875495,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875500,"byte_end":12875507,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875512,"byte_end":12875576,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875581,"byte_end":12875625,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875630,"byte_end":12875633,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875638,"byte_end":12875668,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875673,"byte_end":12875703,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875708,"byte_end":12875711,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875716,"byte_end":12875751,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875756,"byte_end":12875796,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875801,"byte_end":12875811,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875816,"byte_end":12875879,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875884,"byte_end":12875906,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875911,"byte_end":12875935,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875940,"byte_end":12875962,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875967,"byte_end":12875980,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12875985,"byte_end":12876010,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876015,"byte_end":12876049,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876054,"byte_end":12876084,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876089,"byte_end":12876102,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876107,"byte_end":12876116,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876121,"byte_end":12876126,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876131,"byte_end":12876134,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876139,"byte_end":12876180,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876185,"byte_end":12876195,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876200,"byte_end":12876275,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876280,"byte_end":12876307,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876312,"byte_end":12876355,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876360,"byte_end":12876369,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876374,"byte_end":12876379,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12876384,"byte_end":12876391,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877915,"byte_end":12877924,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877093,"byte_end":12877132,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877137,"byte_end":12877140,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877145,"byte_end":12877239,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877244,"byte_end":12877300,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877305,"byte_end":12877308,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877313,"byte_end":12877403,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877408,"byte_end":12877422,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877427,"byte_end":12877430,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877435,"byte_end":12877513,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877518,"byte_end":12877521,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877526,"byte_end":12877540,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877545,"byte_end":12877548,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877553,"byte_end":12877560,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877565,"byte_end":12877622,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877627,"byte_end":12877671,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877676,"byte_end":12877679,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877684,"byte_end":12877744,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877749,"byte_end":12877779,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877784,"byte_end":12877839,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877844,"byte_end":12877891,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12877896,"byte_end":12877903,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878914,"byte_end":12878922,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878095,"byte_end":12878133,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878138,"byte_end":12878141,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878146,"byte_end":12878239,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878244,"byte_end":12878300,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878305,"byte_end":12878308,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878313,"byte_end":12878403,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878408,"byte_end":12878422,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878427,"byte_end":12878430,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878435,"byte_end":12878513,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878518,"byte_end":12878521,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878526,"byte_end":12878540,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878545,"byte_end":12878548,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878553,"byte_end":12878560,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878565,"byte_end":12878622,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878627,"byte_end":12878671,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878676,"byte_end":12878679,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878684,"byte_end":12878744,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878749,"byte_end":12878779,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878784,"byte_end":12878838,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878843,"byte_end":12878890,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12878895,"byte_end":12878902,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879913,"byte_end":12879922,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879091,"byte_end":12879130,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879135,"byte_end":12879138,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879143,"byte_end":12879237,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879242,"byte_end":12879298,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879303,"byte_end":12879306,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879311,"byte_end":12879401,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879406,"byte_end":12879420,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879425,"byte_end":12879428,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879433,"byte_end":12879511,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879516,"byte_end":12879519,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879524,"byte_end":12879538,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879543,"byte_end":12879546,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879551,"byte_end":12879558,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879563,"byte_end":12879620,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879625,"byte_end":12879669,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879674,"byte_end":12879677,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879682,"byte_end":12879742,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879747,"byte_end":12879777,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879782,"byte_end":12879837,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879842,"byte_end":12879889,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12879894,"byte_end":12879901,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881219,"byte_end":12881229,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880092,"byte_end":12880127,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880132,"byte_end":12880135,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880140,"byte_end":12880229,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880234,"byte_end":12880320,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880325,"byte_end":12880360,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880365,"byte_end":12880368,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880373,"byte_end":12880385,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880390,"byte_end":12880393,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880398,"byte_end":12880457,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880462,"byte_end":12880465,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880470,"byte_end":12880482,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880487,"byte_end":12880490,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880495,"byte_end":12880582,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880587,"byte_end":12880620,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880625,"byte_end":12880628,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880633,"byte_end":12880647,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880652,"byte_end":12880655,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880660,"byte_end":12880671,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880676,"byte_end":12880695,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880700,"byte_end":12880734,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880739,"byte_end":12880765,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880770,"byte_end":12880797,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880802,"byte_end":12880807,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880812,"byte_end":12880815,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880820,"byte_end":12880853,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880858,"byte_end":12880886,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880891,"byte_end":12880985,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12880990,"byte_end":12881037,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881042,"byte_end":12881062,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881067,"byte_end":12881146,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881151,"byte_end":12881164,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881169,"byte_end":12881178,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881183,"byte_end":12881188,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881193,"byte_end":12881200,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883699,"byte_end":12883706,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883636,"byte_end":12883688,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883778,"byte_end":12883788,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883716,"byte_end":12883770,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883889,"byte_end":12883899,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883810,"byte_end":12883874,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884165,"byte_end":12884170,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883925,"byte_end":12883960,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883961,"byte_end":12883964,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883965,"byte_end":12884007,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884008,"byte_end":12884011,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884012,"byte_end":12884110,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884111,"byte_end":12884153,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885016,"byte_end":12885019,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884786,"byte_end":12884867,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884872,"byte_end":12884875,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884880,"byte_end":12884894,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884899,"byte_end":12884902,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884907,"byte_end":12884914,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884919,"byte_end":12884950,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884955,"byte_end":12884958,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884963,"byte_end":12884992,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884997,"byte_end":12885004,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885653,"byte_end":12885661,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885091,"byte_end":12885141,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885146,"byte_end":12885149,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885154,"byte_end":12885246,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885251,"byte_end":12885344,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885349,"byte_end":12885374,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885379,"byte_end":12885382,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885387,"byte_end":12885399,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885404,"byte_end":12885407,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885412,"byte_end":12885456,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885461,"byte_end":12885464,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885469,"byte_end":12885483,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885488,"byte_end":12885491,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885496,"byte_end":12885503,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885508,"byte_end":12885539,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885544,"byte_end":12885547,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885552,"byte_end":12885622,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885627,"byte_end":12885634,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886103,"byte_end":12886114,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885768,"byte_end":12885817,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885822,"byte_end":12885825,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885830,"byte_end":12885844,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885849,"byte_end":12885852,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885857,"byte_end":12885864,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885869,"byte_end":12885917,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885922,"byte_end":12885925,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885930,"byte_end":12885959,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885964,"byte_end":12885994,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12885999,"byte_end":12886032,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886037,"byte_end":12886044,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886049,"byte_end":12886052,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886057,"byte_end":12886091,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886506,"byte_end":12886514,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886226,"byte_end":12886270,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886275,"byte_end":12886278,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886283,"byte_end":12886297,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886302,"byte_end":12886305,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886310,"byte_end":12886317,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886322,"byte_end":12886370,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886375,"byte_end":12886378,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886383,"byte_end":12886412,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886417,"byte_end":12886452,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886457,"byte_end":12886482,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886487,"byte_end":12886494,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886872,"byte_end":12886875,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886664,"byte_end":12886710,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886715,"byte_end":12886718,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886723,"byte_end":12886737,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886742,"byte_end":12886745,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886750,"byte_end":12886757,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886762,"byte_end":12886793,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886798,"byte_end":12886801,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886806,"byte_end":12886848,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886853,"byte_end":12886860,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887349,"byte_end":12887357,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12886972,"byte_end":12887062,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887067,"byte_end":12887105,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887110,"byte_end":12887113,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887118,"byte_end":12887132,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887137,"byte_end":12887140,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887145,"byte_end":12887152,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887157,"byte_end":12887188,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887193,"byte_end":12887196,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887201,"byte_end":12887230,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887235,"byte_end":12887262,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887267,"byte_end":12887293,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887298,"byte_end":12887325,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887330,"byte_end":12887337,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889637,"byte_end":12889643,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889358,"byte_end":12889411,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889412,"byte_end":12889415,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889416,"byte_end":12889479,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889480,"byte_end":12889483,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889484,"byte_end":12889582,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889583,"byte_end":12889625,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890450,"byte_end":12890454,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890234,"byte_end":12890265,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890270,"byte_end":12890273,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890278,"byte_end":12890292,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890297,"byte_end":12890300,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890305,"byte_end":12890312,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890317,"byte_end":12890349,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890354,"byte_end":12890357,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890362,"byte_end":12890396,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890401,"byte_end":12890426,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890431,"byte_end":12890438,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891011,"byte_end":12891018,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890569,"byte_end":12890611,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890616,"byte_end":12890619,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890624,"byte_end":12890638,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890643,"byte_end":12890646,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890651,"byte_end":12890658,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890663,"byte_end":12890719,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890724,"byte_end":12890768,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890773,"byte_end":12890776,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890781,"byte_end":12890808,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890813,"byte_end":12890843,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890848,"byte_end":12890893,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890898,"byte_end":12890936,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890941,"byte_end":12890987,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890992,"byte_end":12890999,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891549,"byte_end":12891555,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891079,"byte_end":12891139,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891144,"byte_end":12891147,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891152,"byte_end":12891166,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891171,"byte_end":12891174,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891179,"byte_end":12891186,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891191,"byte_end":12891247,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891252,"byte_end":12891296,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891301,"byte_end":12891304,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891309,"byte_end":12891338,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891343,"byte_end":12891373,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891378,"byte_end":12891406,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891411,"byte_end":12891414,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891419,"byte_end":12891449,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891454,"byte_end":12891488,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891493,"byte_end":12891525,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891530,"byte_end":12891537,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892834,"byte_end":12892839,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891655,"byte_end":12891684,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891689,"byte_end":12891692,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891697,"byte_end":12891775,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891780,"byte_end":12891783,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891788,"byte_end":12891800,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891805,"byte_end":12891808,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891813,"byte_end":12891898,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891903,"byte_end":12891906,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12891911,"byte_end":12892001,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892006,"byte_end":12892055,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892060,"byte_end":12892063,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892068,"byte_end":12892140,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892145,"byte_end":12892220,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892225,"byte_end":12892228,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892233,"byte_end":12892326,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892331,"byte_end":12892424,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892429,"byte_end":12892467,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892472,"byte_end":12892475,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892480,"byte_end":12892494,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892499,"byte_end":12892502,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892507,"byte_end":12892514,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892519,"byte_end":12892568,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892573,"byte_end":12892617,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892622,"byte_end":12892625,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892630,"byte_end":12892660,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892665,"byte_end":12892695,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892700,"byte_end":12892734,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892739,"byte_end":12892751,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892756,"byte_end":12892793,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892798,"byte_end":12892803,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892808,"byte_end":12892815,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894053,"byte_end":12894062,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892893,"byte_end":12892922,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892927,"byte_end":12892930,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12892935,"byte_end":12893021,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893026,"byte_end":12893029,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893034,"byte_end":12893046,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893051,"byte_end":12893054,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893059,"byte_end":12893154,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893159,"byte_end":12893196,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893201,"byte_end":12893204,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893209,"byte_end":12893298,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893303,"byte_end":12893306,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893311,"byte_end":12893385,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893390,"byte_end":12893393,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893398,"byte_end":12893412,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893417,"byte_end":12893420,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893425,"byte_end":12893432,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893437,"byte_end":12893486,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893491,"byte_end":12893535,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893540,"byte_end":12893543,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893548,"byte_end":12893590,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893595,"byte_end":12893625,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893630,"byte_end":12893633,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893638,"byte_end":12893676,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893681,"byte_end":12893693,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893698,"byte_end":12893728,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893733,"byte_end":12893763,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893768,"byte_end":12893809,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893814,"byte_end":12893832,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893837,"byte_end":12893881,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893886,"byte_end":12893891,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893896,"byte_end":12893899,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893904,"byte_end":12893938,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893943,"byte_end":12893955,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12893960,"byte_end":12894012,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894017,"byte_end":12894022,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894027,"byte_end":12894034,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895354,"byte_end":12895360,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894140,"byte_end":12894180,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894185,"byte_end":12894188,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894193,"byte_end":12894288,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894293,"byte_end":12894296,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894301,"byte_end":12894313,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894318,"byte_end":12894321,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894326,"byte_end":12894411,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894416,"byte_end":12894419,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894424,"byte_end":12894514,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894519,"byte_end":12894568,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894573,"byte_end":12894576,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894581,"byte_end":12894653,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894658,"byte_end":12894733,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894738,"byte_end":12894741,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894746,"byte_end":12894839,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894844,"byte_end":12894937,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894942,"byte_end":12894980,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894985,"byte_end":12894988,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12894993,"byte_end":12895007,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895012,"byte_end":12895015,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895020,"byte_end":12895027,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895032,"byte_end":12895081,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895086,"byte_end":12895130,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895135,"byte_end":12895138,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895143,"byte_end":12895173,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895178,"byte_end":12895208,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895213,"byte_end":12895247,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895252,"byte_end":12895264,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895269,"byte_end":12895313,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895318,"byte_end":12895323,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895328,"byte_end":12895335,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896099,"byte_end":12896109,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895429,"byte_end":12895464,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895469,"byte_end":12895472,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895477,"byte_end":12895489,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895494,"byte_end":12895497,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895502,"byte_end":12895561,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895566,"byte_end":12895569,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895574,"byte_end":12895586,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895591,"byte_end":12895594,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895599,"byte_end":12895686,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895691,"byte_end":12895724,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895729,"byte_end":12895732,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895737,"byte_end":12895751,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895756,"byte_end":12895759,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895764,"byte_end":12895771,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895776,"byte_end":12895825,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895830,"byte_end":12895874,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895879,"byte_end":12895882,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895887,"byte_end":12895917,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895922,"byte_end":12895934,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895939,"byte_end":12895981,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12895986,"byte_end":12896024,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896029,"byte_end":12896058,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896063,"byte_end":12896068,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896073,"byte_end":12896080,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896716,"byte_end":12896719,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896308,"byte_end":12896354,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896359,"byte_end":12896362,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896367,"byte_end":12896381,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896386,"byte_end":12896389,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896394,"byte_end":12896401,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896406,"byte_end":12896462,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896467,"byte_end":12896511,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896516,"byte_end":12896519,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896524,"byte_end":12896586,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896591,"byte_end":12896621,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896626,"byte_end":12896660,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896665,"byte_end":12896692,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896697,"byte_end":12896704,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897394,"byte_end":12897402,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896816,"byte_end":12896906,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896911,"byte_end":12896949,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896954,"byte_end":12896957,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896962,"byte_end":12896976,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896981,"byte_end":12896984,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12896989,"byte_end":12896996,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897001,"byte_end":12897050,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897055,"byte_end":12897099,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897104,"byte_end":12897107,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897112,"byte_end":12897142,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897147,"byte_end":12897177,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897182,"byte_end":12897217,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897222,"byte_end":12897250,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897255,"byte_end":12897258,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897263,"byte_end":12897291,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897296,"byte_end":12897324,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897329,"byte_end":12897370,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897375,"byte_end":12897382,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899730,"byte_end":12899739,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":289}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899681,"byte_end":12899718,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899911,"byte_end":12899914,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899871,"byte_end":12899899,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900070,"byte_end":12900078,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900013,"byte_end":12900058,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":302},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900742,"byte_end":12900753,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":303}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900694,"byte_end":12900730,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900864,"byte_end":12900867,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900818,"byte_end":12900838,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900843,"byte_end":12900852,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901005,"byte_end":12901014,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900936,"byte_end":12900979,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900984,"byte_end":12900993,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901170,"byte_end":12901179,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901088,"byte_end":12901144,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901149,"byte_end":12901158,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919801,"byte_end":12919806,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918077,"byte_end":12918126,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918127,"byte_end":12918130,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918131,"byte_end":12918144,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918145,"byte_end":12918148,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918149,"byte_end":12918228,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918229,"byte_end":12918232,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918233,"byte_end":12918240,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918241,"byte_end":12918274,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918275,"byte_end":12918278,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918279,"byte_end":12918377,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918378,"byte_end":12918470,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918471,"byte_end":12918501,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918502,"byte_end":12918509,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918510,"byte_end":12918513,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918514,"byte_end":12918590,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918591,"byte_end":12918594,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918595,"byte_end":12918622,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918623,"byte_end":12918626,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918627,"byte_end":12918714,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918715,"byte_end":12918731,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918732,"byte_end":12918735,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918736,"byte_end":12918743,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918744,"byte_end":12918800,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918801,"byte_end":12918845,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918846,"byte_end":12918849,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918850,"byte_end":12918888,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918889,"byte_end":12918918,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918919,"byte_end":12918922,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918923,"byte_end":12918953,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918954,"byte_end":12918984,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918985,"byte_end":12918988,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12918989,"byte_end":12919063,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919064,"byte_end":12919098,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919099,"byte_end":12919102,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919103,"byte_end":12919154,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919155,"byte_end":12919201,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919202,"byte_end":12919245,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919246,"byte_end":12919251,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919252,"byte_end":12919259,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919260,"byte_end":12919263,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919264,"byte_end":12919285,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919286,"byte_end":12919289,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919290,"byte_end":12919385,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919386,"byte_end":12919484,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919485,"byte_end":12919504,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919505,"byte_end":12919508,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919509,"byte_end":12919516,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919517,"byte_end":12919550,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919551,"byte_end":12919554,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919555,"byte_end":12919585,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919586,"byte_end":12919616,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919617,"byte_end":12919649,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919650,"byte_end":12919667,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919668,"byte_end":12919700,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919701,"byte_end":12919718,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919719,"byte_end":12919752,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919753,"byte_end":12919760,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919761,"byte_end":12919764,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919765,"byte_end":12919789,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920834,"byte_end":12920839,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919865,"byte_end":12919954,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919959,"byte_end":12919984,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919989,"byte_end":12919992,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919997,"byte_end":12920090,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920095,"byte_end":12920183,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920188,"byte_end":12920278,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920283,"byte_end":12920323,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920328,"byte_end":12920331,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920336,"byte_end":12920426,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920431,"byte_end":12920522,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920527,"byte_end":12920614,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920619,"byte_end":12920639,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920644,"byte_end":12920647,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920652,"byte_end":12920739,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920744,"byte_end":12920769,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920774,"byte_end":12920777,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12920782,"byte_end":12920822,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925192,"byte_end":12925207,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921003,"byte_end":12921092,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921097,"byte_end":12921122,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921127,"byte_end":12921130,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921135,"byte_end":12921228,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921233,"byte_end":12921321,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921326,"byte_end":12921416,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921421,"byte_end":12921461,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921466,"byte_end":12921469,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921474,"byte_end":12921564,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921569,"byte_end":12921660,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921665,"byte_end":12921752,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921757,"byte_end":12921777,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921782,"byte_end":12921785,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921790,"byte_end":12921877,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921882,"byte_end":12921907,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921912,"byte_end":12921915,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921920,"byte_end":12921932,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921937,"byte_end":12921940,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12921945,"byte_end":12922037,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922042,"byte_end":12922129,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922134,"byte_end":12922146,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922151,"byte_end":12922154,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922159,"byte_end":12922166,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922171,"byte_end":12922204,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922209,"byte_end":12922212,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922217,"byte_end":12922247,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922252,"byte_end":12922279,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922284,"byte_end":12922296,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922301,"byte_end":12922376,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922381,"byte_end":12922420,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922425,"byte_end":12922461,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922466,"byte_end":12922477,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922482,"byte_end":12922487,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922492,"byte_end":12922499,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922504,"byte_end":12922507,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922512,"byte_end":12922606,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922611,"byte_end":12922642,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922647,"byte_end":12922650,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922655,"byte_end":12922750,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922755,"byte_end":12922847,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922852,"byte_end":12922941,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922946,"byte_end":12922949,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922954,"byte_end":12922967,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12922972,"byte_end":12923025,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923030,"byte_end":12923112,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923117,"byte_end":12923124,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923129,"byte_end":12923132,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923137,"byte_end":12923230,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923235,"byte_end":12923330,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923335,"byte_end":12923395,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923400,"byte_end":12923403,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923408,"byte_end":12923422,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923427,"byte_end":12923430,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923435,"byte_end":12923521,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923526,"byte_end":12923620,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923625,"byte_end":12923721,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923726,"byte_end":12923818,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923823,"byte_end":12923879,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923884,"byte_end":12923887,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923892,"byte_end":12923899,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923904,"byte_end":12923960,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12923965,"byte_end":12924009,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924014,"byte_end":12924017,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924022,"byte_end":12924053,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924058,"byte_end":12924061,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924066,"byte_end":12924143,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924148,"byte_end":12924179,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924184,"byte_end":12924187,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924192,"byte_end":12924222,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924227,"byte_end":12924257,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924262,"byte_end":12924265,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924270,"byte_end":12924347,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924352,"byte_end":12924424,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924429,"byte_end":12924432,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924437,"byte_end":12924458,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924463,"byte_end":12924523,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924528,"byte_end":12924610,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924615,"byte_end":12924631,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924636,"byte_end":12924715,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924720,"byte_end":12924763,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924768,"byte_end":12924836,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924841,"byte_end":12924933,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12924938,"byte_end":12925022,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925027,"byte_end":12925064,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925069,"byte_end":12925084,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925089,"byte_end":12925098,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925103,"byte_end":12925108,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925113,"byte_end":12925120,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925125,"byte_end":12925128,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925133,"byte_end":12925173,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928847,"byte_end":12928860,"line_start":271,"line_end":271,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925446,"byte_end":12925539,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925544,"byte_end":12925596,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925601,"byte_end":12925604,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925609,"byte_end":12925702,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925707,"byte_end":12925797,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925802,"byte_end":12925891,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925896,"byte_end":12925950,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925955,"byte_end":12925958,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12925963,"byte_end":12926056,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926061,"byte_end":12926154,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926159,"byte_end":12926252,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926257,"byte_end":12926288,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926293,"byte_end":12926296,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926301,"byte_end":12926390,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926395,"byte_end":12926420,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926425,"byte_end":12926428,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926433,"byte_end":12926445,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926450,"byte_end":12926453,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926458,"byte_end":12926551,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926556,"byte_end":12926589,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926594,"byte_end":12926597,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926602,"byte_end":12926697,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926702,"byte_end":12926740,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926745,"byte_end":12926748,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926753,"byte_end":12926848,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926853,"byte_end":12926945,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12926950,"byte_end":12927039,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927044,"byte_end":12927047,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927052,"byte_end":12927065,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927070,"byte_end":12927123,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927128,"byte_end":12927187,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927192,"byte_end":12927199,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927204,"byte_end":12927207,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927212,"byte_end":12927306,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927311,"byte_end":12927398,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927403,"byte_end":12927463,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927468,"byte_end":12927471,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927476,"byte_end":12927490,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927495,"byte_end":12927498,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927503,"byte_end":12927589,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927594,"byte_end":12927688,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927693,"byte_end":12927789,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927794,"byte_end":12927886,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927891,"byte_end":12927947,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927952,"byte_end":12927955,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927960,"byte_end":12927967,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12927972,"byte_end":12928028,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928033,"byte_end":12928077,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928082,"byte_end":12928085,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928090,"byte_end":12928121,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928126,"byte_end":12928129,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928134,"byte_end":12928211,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928216,"byte_end":12928247,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928252,"byte_end":12928255,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928260,"byte_end":12928290,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928295,"byte_end":12928325,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928330,"byte_end":12928333,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928338,"byte_end":12928415,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928420,"byte_end":12928492,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928497,"byte_end":12928500,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928505,"byte_end":12928526,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928531,"byte_end":12928591,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928596,"byte_end":12928678,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928683,"byte_end":12928699,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928704,"byte_end":12928739,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928744,"byte_end":12928753,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928758,"byte_end":12928763,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928768,"byte_end":12928775,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928780,"byte_end":12928783,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928788,"byte_end":12928828,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929833,"byte_end":12929838,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12928956,"byte_end":12929051,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929056,"byte_end":12929073,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929078,"byte_end":12929081,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929086,"byte_end":12929180,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929185,"byte_end":12929277,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929282,"byte_end":12929350,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929355,"byte_end":12929358,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929363,"byte_end":12929455,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929460,"byte_end":12929463,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929468,"byte_end":12929482,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929487,"byte_end":12929490,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929495,"byte_end":12929502,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929507,"byte_end":12929540,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929545,"byte_end":12929548,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929553,"byte_end":12929583,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929588,"byte_end":12929600,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929605,"byte_end":12929634,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929639,"byte_end":12929707,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929712,"byte_end":12929723,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929728,"byte_end":12929733,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929738,"byte_end":12929756,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929761,"byte_end":12929768,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929773,"byte_end":12929776,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929781,"byte_end":12929821,"line_start":298,"line_end":298,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931111,"byte_end":12931116,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12929962,"byte_end":12930013,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930018,"byte_end":12930021,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930026,"byte_end":12930116,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930121,"byte_end":12930215,"line_start":308,"line_end":308,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930220,"byte_end":12930314,"line_start":309,"line_end":309,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930319,"byte_end":12930371,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930376,"byte_end":12930379,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930384,"byte_end":12930477,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930482,"byte_end":12930485,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930490,"byte_end":12930504,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930509,"byte_end":12930512,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930517,"byte_end":12930524,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930529,"byte_end":12930578,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930583,"byte_end":12930627,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930632,"byte_end":12930652,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930657,"byte_end":12930685,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930690,"byte_end":12930693,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930698,"byte_end":12930727,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930732,"byte_end":12930765,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930770,"byte_end":12930775,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930780,"byte_end":12930819,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930824,"byte_end":12930878,"line_start":326,"line_end":326,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930883,"byte_end":12930888,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930893,"byte_end":12930911,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930916,"byte_end":12930921,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930926,"byte_end":12930965,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12930970,"byte_end":12931024,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931029,"byte_end":12931034,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931039,"byte_end":12931046,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931051,"byte_end":12931054,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931059,"byte_end":12931099,"line_start":335,"line_end":335,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932496,"byte_end":12932507,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931240,"byte_end":12931331,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931336,"byte_end":12931339,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931344,"byte_end":12931435,"line_start":344,"line_end":344,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931440,"byte_end":12931536,"line_start":345,"line_end":345,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931541,"byte_end":12931635,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931640,"byte_end":12931659,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931664,"byte_end":12931667,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931672,"byte_end":12931766,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931771,"byte_end":12931813,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931818,"byte_end":12931821,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931826,"byte_end":12931840,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931845,"byte_end":12931848,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931853,"byte_end":12931860,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931865,"byte_end":12931914,"line_start":355,"line_end":355,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931919,"byte_end":12931963,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931968,"byte_end":12931988,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12931993,"byte_end":12932021,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932026,"byte_end":12932029,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932034,"byte_end":12932063,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932068,"byte_end":12932101,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932106,"byte_end":12932111,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932116,"byte_end":12932155,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932160,"byte_end":12932214,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932219,"byte_end":12932224,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932229,"byte_end":12932296,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932301,"byte_end":12932306,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932311,"byte_end":12932350,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932355,"byte_end":12932409,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932414,"byte_end":12932419,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932424,"byte_end":12932431,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932436,"byte_end":12932439,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12932444,"byte_end":12932484,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933714,"byte_end":12933723,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933112,"byte_end":12933167,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933172,"byte_end":12933175,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933180,"byte_end":12933255,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933260,"byte_end":12933310,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933315,"byte_end":12933318,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933323,"byte_end":12933407,"line_start":401,"line_end":401,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933412,"byte_end":12933415,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933420,"byte_end":12933434,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933439,"byte_end":12933442,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933447,"byte_end":12933454,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933459,"byte_end":12933492,"line_start":406,"line_end":406,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933497,"byte_end":12933500,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933505,"byte_end":12933539,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933544,"byte_end":12933578,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933583,"byte_end":12933637,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933642,"byte_end":12933649,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933654,"byte_end":12933657,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933662,"byte_end":12933702,"line_start":413,"line_end":413,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12937041,"byte_end":12937052,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934129,"byte_end":12934216,"line_start":434,"line_end":434,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934217,"byte_end":12934220,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934221,"byte_end":12934316,"line_start":436,"line_end":436,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934317,"byte_end":12934406,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934407,"byte_end":12934410,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934411,"byte_end":12934504,"line_start":439,"line_end":439,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934505,"byte_end":12934542,"line_start":440,"line_end":440,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934543,"byte_end":12934546,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934547,"byte_end":12934643,"line_start":442,"line_end":442,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934644,"byte_end":12934647,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934648,"byte_end":12934660,"line_start":444,"line_end":444,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934661,"byte_end":12934664,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934665,"byte_end":12934755,"line_start":446,"line_end":446,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934756,"byte_end":12934823,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934824,"byte_end":12934827,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934828,"byte_end":12934842,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934843,"byte_end":12934846,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934847,"byte_end":12934854,"line_start":451,"line_end":451,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934855,"byte_end":12934904,"line_start":452,"line_end":452,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934905,"byte_end":12934950,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934951,"byte_end":12934954,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934955,"byte_end":12934982,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934983,"byte_end":12934986,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934987,"byte_end":12934999,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935000,"byte_end":12935055,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935056,"byte_end":12935102,"line_start":459,"line_end":459,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935103,"byte_end":12935106,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935107,"byte_end":12935181,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935182,"byte_end":12935232,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935233,"byte_end":12935236,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935237,"byte_end":12935266,"line_start":464,"line_end":464,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935267,"byte_end":12935323,"line_start":465,"line_end":465,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935324,"byte_end":12935335,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935336,"byte_end":12935339,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935340,"byte_end":12935421,"line_start":468,"line_end":468,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935422,"byte_end":12935427,"line_start":469,"line_end":469,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935428,"byte_end":12935435,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935436,"byte_end":12935439,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935440,"byte_end":12935534,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935535,"byte_end":12935538,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935539,"byte_end":12935633,"line_start":474,"line_end":474,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935634,"byte_end":12935719,"line_start":475,"line_end":475,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935720,"byte_end":12935723,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935724,"byte_end":12935823,"line_start":477,"line_end":477,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935824,"byte_end":12935922,"line_start":478,"line_end":478,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935923,"byte_end":12935943,"line_start":479,"line_end":479,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935944,"byte_end":12935947,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935948,"byte_end":12935955,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12935956,"byte_end":12936005,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936006,"byte_end":12936037,"line_start":483,"line_end":483,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936038,"byte_end":12936083,"line_start":484,"line_end":484,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936084,"byte_end":12936087,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936088,"byte_end":12936109,"line_start":486,"line_end":486,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936110,"byte_end":12936140,"line_start":487,"line_end":487,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936141,"byte_end":12936146,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936147,"byte_end":12936150,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936151,"byte_end":12936171,"line_start":490,"line_end":490,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936172,"byte_end":12936202,"line_start":491,"line_end":491,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936203,"byte_end":12936233,"line_start":492,"line_end":492,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936234,"byte_end":12936239,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936240,"byte_end":12936243,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936244,"byte_end":12936275,"line_start":495,"line_end":495,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936276,"byte_end":12936304,"line_start":496,"line_end":496,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936305,"byte_end":12936325,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936326,"byte_end":12936362,"line_start":498,"line_end":498,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936363,"byte_end":12936440,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936441,"byte_end":12936444,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936445,"byte_end":12936496,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936497,"byte_end":12936537,"line_start":502,"line_end":502,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936538,"byte_end":12936612,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936613,"byte_end":12936616,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936617,"byte_end":12936705,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936706,"byte_end":12936756,"line_start":506,"line_end":506,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936757,"byte_end":12936809,"line_start":507,"line_end":507,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936810,"byte_end":12936838,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936839,"byte_end":12936842,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936843,"byte_end":12936875,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936876,"byte_end":12936893,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936894,"byte_end":12936907,"line_start":512,"line_end":512,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936908,"byte_end":12936917,"line_start":513,"line_end":513,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936918,"byte_end":12936923,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936924,"byte_end":12936931,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936932,"byte_end":12936935,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936936,"byte_end":12936970,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12936971,"byte_end":12937016,"line_start":518,"line_end":518,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12937017,"byte_end":12937026,"line_start":519,"line_end":519,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13339940,"byte_end":13339943,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13339894,"byte_end":13339922,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13339923,"byte_end":13339932,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13340068,"byte_end":13340077,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13339999,"byte_end":13340050,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13340051,"byte_end":13340060,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13340187,"byte_end":13340204,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/default.rs","byte_start":13340138,"byte_end":13340179,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865084,"byte_end":12865102,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866276,"byte_end":12866284,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868102,"byte_end":12868108,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868152,"byte_end":12868158,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868174,"byte_end":12868180,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881332,"byte_end":12881338,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881662,"byte_end":12881668,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881898,"byte_end":12881904,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882231,"byte_end":12882237,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882329,"byte_end":12882335,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882730,"byte_end":12882736,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882839,"byte_end":12882845,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882945,"byte_end":12882951,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883300,"byte_end":12883306,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884253,"byte_end":12884258,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884771,"byte_end":12884776,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887521,"byte_end":12887526,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887709,"byte_end":12887714,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887989,"byte_end":12887994,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888115,"byte_end":12888120,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888286,"byte_end":12888291,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888450,"byte_end":12888455,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888545,"byte_end":12888550,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889003,"byte_end":12889008,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889093,"byte_end":12889098,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889195,"byte_end":12889200,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889281,"byte_end":12889286,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889745,"byte_end":12889751,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889911,"byte_end":12889917,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889956,"byte_end":12889962,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890214,"byte_end":12890220,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897553,"byte_end":12897559,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898085,"byte_end":12898091,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898202,"byte_end":12898208,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898262,"byte_end":12898268,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898417,"byte_end":12898423,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898555,"byte_end":12898561,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898845,"byte_end":12898851,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898998,"byte_end":12899004,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899802,"byte_end":12899811,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899836,"byte_end":12899845,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899855,"byte_end":12899864,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900157,"byte_end":12900166,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900364,"byte_end":12900373,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900497,"byte_end":12900506,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900680,"byte_end":12900689,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900800,"byte_end":12900811,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901271,"byte_end":12901282,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901429,"byte_end":12901440,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/deferred.rs","byte_start":12911376,"byte_end":12911384,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/deferred.rs","byte_start":12911504,"byte_end":12911512,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/epoch.rs","byte_start":12915143,"byte_end":12915148,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/epoch.rs","byte_start":12916903,"byte_end":12916914,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919853,"byte_end":12919858,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933848,"byte_end":12933853,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934023,"byte_end":12934028,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12940553,"byte_end":12940556,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12940566,"byte_end":12940569,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12941496,"byte_end":12941499,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945008,"byte_end":12945011,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945410,"byte_end":12945413,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945835,"byte_end":12945844,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945854,"byte_end":12945863,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12946538,"byte_end":12946544,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12951283,"byte_end":12951288,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12959811,"byte_end":12959816,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12965789,"byte_end":12965794,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12965930,"byte_end":12965935,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12966441,"byte_end":12966445,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12968997,"byte_end":12969001,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12969534,"byte_end":12969538,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979302,"byte_end":12979307,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979344,"byte_end":12979349,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979365,"byte_end":12979370,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12984938,"byte_end":12984943,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12865084,"byte_end":12865102,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12866276,"byte_end":12866284,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":43641},"to":{"krate":0,"index":69}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868102,"byte_end":12868108,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868152,"byte_end":12868158,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12868174,"byte_end":12868180,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881332,"byte_end":12881338,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881662,"byte_end":12881668,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":9411}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12881898,"byte_end":12881904,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882231,"byte_end":12882237,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882329,"byte_end":12882335,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882730,"byte_end":12882736,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882839,"byte_end":12882845,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12882945,"byte_end":12882951,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12883300,"byte_end":12883306,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884253,"byte_end":12884258,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":156}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12884771,"byte_end":12884776,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887521,"byte_end":12887526,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887709,"byte_end":12887714,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12887989,"byte_end":12887994,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888115,"byte_end":12888120,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888286,"byte_end":12888291,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888450,"byte_end":12888455,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12888545,"byte_end":12888550,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889003,"byte_end":12889008,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889093,"byte_end":12889098,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889195,"byte_end":12889200,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889281,"byte_end":12889286,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889745,"byte_end":12889751,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889911,"byte_end":12889917,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12889956,"byte_end":12889962,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":156}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12890214,"byte_end":12890220,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12897553,"byte_end":12897559,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898085,"byte_end":12898091,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898202,"byte_end":12898208,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898262,"byte_end":12898268,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898417,"byte_end":12898423,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898555,"byte_end":12898561,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898845,"byte_end":12898851,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":9411}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/atomic.rs","byte_start":12898998,"byte_end":12899004,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899802,"byte_end":12899811,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899836,"byte_end":12899845,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12899855,"byte_end":12899864,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900157,"byte_end":12900166,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900364,"byte_end":12900373,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900497,"byte_end":12900506,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900680,"byte_end":12900689,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12900800,"byte_end":12900811,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901271,"byte_end":12901282,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":302},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/collector.rs","byte_start":12901429,"byte_end":12901440,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":302},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/deferred.rs","byte_start":12911376,"byte_end":12911384,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/deferred.rs","byte_start":12911504,"byte_end":12911512,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/epoch.rs","byte_start":12915143,"byte_end":12915148,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/epoch.rs","byte_start":12916903,"byte_end":12916914,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12919853,"byte_end":12919858,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12933848,"byte_end":12933853,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/guard.rs","byte_start":12934023,"byte_end":12934028,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12940553,"byte_end":12940556,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12940566,"byte_end":12940569,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12941496,"byte_end":12941499,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945008,"byte_end":12945011,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945410,"byte_end":12945413,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945835,"byte_end":12945844,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12945854,"byte_end":12945863,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12946538,"byte_end":12946544,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12951283,"byte_end":12951288,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs","byte_start":12959811,"byte_end":12959816,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":580}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12965789,"byte_end":12965794,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":738},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12965930,"byte_end":12965935,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12966441,"byte_end":12966445,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12968997,"byte_end":12969001,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":742},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/list.rs","byte_start":12969534,"byte_end":12969538,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979302,"byte_end":12979307,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979344,"byte_end":12979349,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12979365,"byte_end":12979370,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/sync/queue.rs","byte_start":12984938,"byte_end":12984943,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":3251}}]}