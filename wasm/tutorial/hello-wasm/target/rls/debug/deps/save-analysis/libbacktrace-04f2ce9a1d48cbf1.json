{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64","program":"/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","backtrace","--edition=2018","/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=04f2ce9a1d48cbf1","-C","extra-filename=-04f2ce9a1d48cbf1","--out-dir","/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","-L","dependency=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","--extern","addr2line=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libaddr2line-65354cad3bb035cb.rmeta","--extern","cfg_if=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","libc=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/liblibc-7765161843f8f84a.rmeta","--extern","miniz_oxide=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libminiz_oxide-a466c6e527737849.rmeta","--extern","object=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libobject-58c6912dfc205dae.rmeta","--extern","rustc_demangle=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/librustc_demangle-078a33169c1dfdb7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libbacktrace-04f2ce9a1d48cbf1.rmeta"},"prelude":{"crate_id":{"name":"backtrace","disambiguator":[13942088990719776484,0]},"crate_root":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src","external_crates":[{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","num":20,"id":{"name":"rustc_demangle","disambiguator":[12312787716154474593,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","num":21,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","num":22,"id":{"name":"addr2line","disambiguator":[14471134541237352200,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","num":23,"id":{"name":"gimli","disambiguator":[350812519107691989,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","num":24,"id":{"name":"libc","disambiguator":[2000753584118294429,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","num":25,"id":{"name":"object","disambiguator":[316220004037869991,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","num":26,"id":{"name":"memchr","disambiguator":[8531325220416081113,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","num":27,"id":{"name":"miniz_oxide","disambiguator":[6532455767554773153,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","num":28,"id":{"name":"adler","disambiguator":[10950313221171129916,0]}}],"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":0,"byte_end":6389,"line_start":1,"line_end":193,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4434,"byte_end":4454,"line_start":113,"line_end":113,"column_start":27,"column_end":47},"alias_span":null,"name":"trace_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4456,"byte_end":4461,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4505,"byte_end":4533,"line_start":116,"line_end":116,"column_start":26,"column_end":54},"alias_span":null,"name":"resolve_frame_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4561,"byte_end":4583,"line_start":117,"line_end":117,"column_start":27,"column_end":49},"alias_span":null,"name":"resolve_unsynchronized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4585,"byte_end":4591,"line_start":117,"line_end":117,"column_start":51,"column_end":57},"alias_span":null,"name":"Symbol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4593,"byte_end":4603,"line_start":117,"line_end":117,"column_start":59,"column_end":69},"alias_span":null,"name":"SymbolName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":729},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4643,"byte_end":4660,"line_start":120,"line_end":120,"column_start":22,"column_end":39},"alias_span":null,"name":"BytesOrWideString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4723,"byte_end":4741,"line_start":124,"line_end":124,"column_start":26,"column_end":44},"alias_span":null,"name":"clear_symbol_cache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4771,"byte_end":4783,"line_start":127,"line_end":127,"column_start":17,"column_end":29},"alias_span":null,"name":"BacktraceFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4785,"byte_end":4802,"line_start":127,"line_end":127,"column_start":31,"column_end":48},"alias_span":null,"name":"BacktraceFrameFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4804,"byte_end":4812,"line_start":127,"line_end":127,"column_start":50,"column_end":58},"alias_span":null,"name":"PrintFmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4900,"byte_end":4905,"line_start":131,"line_end":131,"column_start":34,"column_end":39},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4941,"byte_end":4948,"line_start":132,"line_end":132,"column_start":35,"column_end":42},"alias_span":null,"name":"resolve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4950,"byte_end":4963,"line_start":132,"line_end":132,"column_start":44,"column_end":57},"alias_span":null,"name":"resolve_frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":4998,"byte_end":5007,"line_start":133,"line_end":133,"column_start":33,"column_end":42},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":869},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5009,"byte_end":5023,"line_start":133,"line_end":133,"column_start":44,"column_end":58},"alias_span":null,"name":"BacktraceFrame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5025,"byte_end":5040,"line_start":133,"line_end":133,"column_start":60,"column_end":75},"alias_span":null,"name":"BacktraceSymbol","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":0,"byte_end":6389,"line_start":1,"line_end":193,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" A library for acquiring a backtrace at runtime","sig":null,"attributes":[{"value":"/ A library for acquiring a backtrace at runtime","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":0,"byte_end":50,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":51,"byte_end":54,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is meant to supplement the `RUST_BACKTRACE=1` support of the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":55,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ standard library by allowing an acquisition of a backtrace at runtime","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":133,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ programmatically. The backtraces generated by this library do not need to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":207,"byte_end":287,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ parsed, for example, and expose the functionality of multiple backend","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":288,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ implementations.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":362,"byte_end":382,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":383,"byte_end":386,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":387,"byte_end":398,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":399,"byte_end":402,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ First, add this to your Cargo.toml","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":403,"byte_end":441,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":442,"byte_end":445,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":446,"byte_end":457,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":458,"byte_end":476,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/ backtrace = \"0.3\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":477,"byte_end":498,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":499,"byte_end":506,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":507,"byte_end":510,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Next:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":511,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":521,"byte_end":524,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":525,"byte_end":532,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":533,"byte_end":548,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ # // Unsafe here so test passes on no_std.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":549,"byte_end":595,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":596,"byte_end":627,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":628,"byte_end":662,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/         let ip = frame.ip();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":663,"byte_end":695,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/         let symbol_address = frame.symbol_address();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":696,"byte_end":752,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":753,"byte_end":756,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/         // Resolve this instruction pointer to a symbol name","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":757,"byte_end":821,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/         backtrace::resolve_frame(frame, |symbol| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":822,"byte_end":876,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/             if let Some(name) = symbol.name() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":877,"byte_end":928,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/                 // ...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":929,"byte_end":955,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":956,"byte_end":973,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/             if let Some(filename) = symbol.filename() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":974,"byte_end":1033,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/                 // ...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1034,"byte_end":1060,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1061,"byte_end":1078,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1079,"byte_end":1094,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1095,"byte_end":1098,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         true // keep going to the next frame","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1099,"byte_end":1147,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1148,"byte_end":1159,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1160,"byte_end":1165,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1166,"byte_end":1173,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1174,"byte_end":1181,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1182,"byte_end":1185,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Backtrace accuracy","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1186,"byte_end":1210,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1211,"byte_end":1214,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This crate implements best-effort attempts to get the native backtrace. This","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1215,"byte_end":1295,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ is not always guaranteed to work, and some platforms don't return any","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1296,"byte_end":1369,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ backtrace at all. If your application requires accurate backtraces then it's","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1370,"byte_end":1450,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ recommended to closely evaluate this crate to see whether it's suitable","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1451,"byte_end":1526,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ for your use case on your target platforms.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1527,"byte_end":1574,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1575,"byte_end":1578,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Even on supported platforms, there's a number of reasons that backtraces may","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1579,"byte_end":1659,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ be less-than-accurate, including but not limited to:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1660,"byte_end":1716,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1717,"byte_end":1720,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * Unwind information may not be available. This crate primarily implements","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1721,"byte_end":1799,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   backtraces by unwinding the stack, but not all functions may have","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1800,"byte_end":1871,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/   unwinding information (e.g. DWARF unwinding information).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1872,"byte_end":1935,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1936,"byte_end":1939,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ * Rust code may be compiled without unwinding information for some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":1940,"byte_end":2010,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/   functions. This can also happen for Rust code compiled with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2011,"byte_end":2076,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/   `-Cpanic=abort`. You can remedy this, however, with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2077,"byte_end":2134,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/   `-Cforce-unwind-tables` as a compiler option.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2135,"byte_end":2186,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2187,"byte_end":2190,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * Unwind information may be inaccurate or corrupt. In the worst case","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2191,"byte_end":2263,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/   inaccurate unwind information can lead this library to segfault. In the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2264,"byte_end":2341,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/   best case inaccurate information will result in a truncated stack trace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2342,"byte_end":2420,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2421,"byte_end":2424,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * Backtraces may not report filenames/line numbers correctly due to missing","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2425,"byte_end":2504,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/   or corrupt debug information. This won't lead to segfaults unlike corrupt","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2505,"byte_end":2584,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/   unwinding information, but missing or malformed debug information will","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2585,"byte_end":2661,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/   mean that filenames and line numbers will not be available. This may be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2662,"byte_end":2739,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/   because debug information wasn't generated by the compiler, or it's just","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2740,"byte_end":2818,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/   missing on the filesystem.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2819,"byte_end":2851,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2852,"byte_end":2855,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * Not all platforms are supported. For example there's no way to get a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2856,"byte_end":2930,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/   backtrace on WebAssembly at the moment.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2931,"byte_end":2976,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2977,"byte_end":2980,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ * Crate features may be disabled. Currently this crate supports using Gimli","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":2981,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/   libbacktrace on non-Windows platforms for reading debuginfo for","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3061,"byte_end":3130,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/   backtraces. If both crate features are disabled, however, then these","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3131,"byte_end":3205,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/   platforms will generate a backtrace but be unable to generate symbols for","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3206,"byte_end":3285,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/   it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3286,"byte_end":3295,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3296,"byte_end":3299,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ In most standard workflows for most standard platforms you generally don't","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3300,"byte_end":3378,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ need to worry about these caveats. We'll try to fix ones where we can over","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3379,"byte_end":3457,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/ time, but otherwise it's important to be aware of the limitations of","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3458,"byte_end":3530,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/ unwinding-based backtraces!","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3531,"byte_end":3562,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(missing_docs)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3617,"byte_end":3639,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3640,"byte_end":3650,"line_start":91,"line_end":91,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":3767,"byte_end":3793,"line_start":96,"line_end":96,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8217,"byte_end":8222,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"trace","qualname":"::backtrace::trace","value":"pub fn trace<F: FnMut(&Frame) -> bool>(F)","parent":null,"children":[],"decl_id":null,"docs":" Inspects the current call-stack, passing all active frames into the closure\n provided to calculate a stack trace.","sig":null,"attributes":[{"value":"/ Inspects the current call-stack, passing all active frames into the closure","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6430,"byte_end":6509,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ provided to calculate a stack trace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6510,"byte_end":6550,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6551,"byte_end":6554,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is the workhorse of this library in calculating the stack","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6555,"byte_end":6630,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ traces for a program. The given closure `cb` is yielded instances of a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6631,"byte_end":6705,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ `Frame` which represent information about that call frame on the stack. The","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6706,"byte_end":6785,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ closure is yielded frames in a top-down fashion (most recently called","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6786,"byte_end":6859,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ functions first).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6860,"byte_end":6881,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6882,"byte_end":6885,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The closure's return value is an indication of whether the backtrace should","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6886,"byte_end":6965,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ continue. A return value of `false` will terminate the backtrace and return","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":6966,"byte_end":7045,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ immediately.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7046,"byte_end":7062,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7063,"byte_end":7066,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Once a `Frame` is acquired you will likely want to call `backtrace::resolve`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7067,"byte_end":7147,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ to convert the `ip` (instruction pointer) or symbol address to a `Symbol`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7148,"byte_end":7225,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ through which the name and/or filename/line number can be learned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7226,"byte_end":7296,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7297,"byte_end":7300,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this is a relatively low-level function and if you'd like to, for","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7301,"byte_end":7380,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ example, capture a backtrace to be inspected later, then the `Backtrace`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7381,"byte_end":7457,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ type may be more appropriate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7458,"byte_end":7491,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7492,"byte_end":7495,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7496,"byte_end":7519,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7520,"byte_end":7523,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7524,"byte_end":7599,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7600,"byte_end":7657,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7658,"byte_end":7661,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7662,"byte_end":7674,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7675,"byte_end":7678,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7679,"byte_end":7757,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7758,"byte_end":7829,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7830,"byte_end":7907,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7908,"byte_end":7980,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7981,"byte_end":7984,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7985,"byte_end":7998,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":7999,"byte_end":8002,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8003,"byte_end":8010,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8011,"byte_end":8038,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8039,"byte_end":8042,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8043,"byte_end":8058,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8059,"byte_end":8093,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8094,"byte_end":8112,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8113,"byte_end":8116,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/         true // continue the backtrace","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8117,"byte_end":8159,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8160,"byte_end":8171,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8172,"byte_end":8177,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8178,"byte_end":8185,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8186,"byte_end":8209,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8699,"byte_end":8719,"line_start":65,"line_end":65,"column_start":15,"column_end":35},"name":"trace_unsynchronized","qualname":"::backtrace::trace_unsynchronized","value":"pub unsafe fn trace_unsynchronized<F: FnMut(&Frame) -> bool>(F)","parent":null,"children":[],"decl_id":null,"docs":" Same as `trace`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `trace`, only unsafe as it's unsynchronized.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8339,"byte_end":8395,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8396,"byte_end":8399,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarantees but is available","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8400,"byte_end":8475,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ when the `std` feature of this crate isn't compiled in. See the `trace`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8476,"byte_end":8551,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ function for more documentation and examples.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8552,"byte_end":8601,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8602,"byte_end":8605,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8606,"byte_end":8618,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8619,"byte_end":8622,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See information on `trace` for caveats on `cb` panicking.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8623,"byte_end":8684,"line_start":64,"line_end":64,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9092,"byte_end":9097,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Frame","qualname":"::backtrace::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":237}],"decl_id":null,"docs":" A trait representing one frame of a backtrace, yielded to the `trace`\n function of this crate.","sig":null,"attributes":[{"value":"/ A trait representing one frame of a backtrace, yielded to the `trace`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8785,"byte_end":8858,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ function of this crate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8859,"byte_end":8886,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8887,"byte_end":8890,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The tracing function's closure will be yielded frames, and the frame is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8891,"byte_end":8966,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ virtually dispatched as the underlying implementation is not always known","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":8967,"byte_end":9044,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ until runtime.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9045,"byte_end":9063,"line_start":74,"line_end":74,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9525,"byte_end":9527,"line_start":89,"line_end":89,"column_start":12,"column_end":14},"name":"ip","qualname":"<Frame>::ip","value":"pub fn ip(&Self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Returns the current instruction pointer of this frame.","sig":null,"attributes":[{"value":"/ Returns the current instruction pointer of this frame.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9152,"byte_end":9210,"line_start":81,"line_end":81,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9215,"byte_end":9218,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is normally the next instruction to execute in the frame, but not","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9223,"byte_end":9297,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ all implementations list this with 100% accuracy (but it's generally","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9302,"byte_end":9374,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ pretty close).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9379,"byte_end":9397,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9402,"byte_end":9405,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ It is recommended to pass this value to `backtrace::resolve` to turn it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9410,"byte_end":9485,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ into a symbol name.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9490,"byte_end":9513,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9779,"byte_end":9781,"line_start":97,"line_end":97,"column_start":12,"column_end":14},"name":"sp","qualname":"<Frame>::sp","value":"pub fn sp(&Self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Returns the current stack pointer of this frame.","sig":null,"attributes":[{"value":"/ Returns the current stack pointer of this frame.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9587,"byte_end":9639,"line_start":93,"line_end":93,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9644,"byte_end":9647,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ In the case that a backend cannot recover the stack pointer for this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9652,"byte_end":9724,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ frame, a null pointer is returned.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9729,"byte_end":9767,"line_start":96,"line_end":96,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10272,"byte_end":10286,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"symbol_address","qualname":"<Frame>::symbol_address","value":"pub fn symbol_address(&Self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting symbol address of the frame of this function.","sig":null,"attributes":[{"value":"/ Returns the starting symbol address of the frame of this function.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9841,"byte_end":9911,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9916,"byte_end":9919,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This will attempt to rewind the instruction pointer returned by `ip` to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9924,"byte_end":9999,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ the start of the function, returning that value. In some cases, however,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10004,"byte_end":10080,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ backends will just return `ip` from this function.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10085,"byte_end":10139,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10144,"byte_end":10147,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned value can sometimes be used if `backtrace::resolve` failed","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10152,"byte_end":10227,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ on the `ip` given above.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10232,"byte_end":10260,"line_start":108,"line_end":108,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10440,"byte_end":10459,"line_start":114,"line_end":114,"column_start":12,"column_end":31},"name":"module_base_address","qualname":"<Frame>::module_base_address","value":"pub fn module_base_address(&Self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Returns the base address of the module to which the frame belongs.\n","sig":null,"attributes":[{"value":"/ Returns the base address of the module to which the frame belongs.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10358,"byte_end":10428,"line_start":113,"line_end":113,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13797,"byte_end":13804,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"resolve","qualname":"::symbolize::resolve","value":"pub fn resolve<F: FnMut(&Symbol) -> ()>(*mut c_void, F)","parent":null,"children":[],"decl_id":null,"docs":" Resolve an address to a symbol, passing the symbol to the specified\n closure.","sig":null,"attributes":[{"value":"/ Resolve an address to a symbol, passing the symbol to the specified","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12251,"byte_end":12322,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ closure.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12323,"byte_end":12335,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12336,"byte_end":12339,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will look up the given address in areas such as the local","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12340,"byte_end":12415,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ symbol table, dynamic symbol table, or DWARF debug info (depending on the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12416,"byte_end":12493,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ activated implementation) to find symbols to yield.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12494,"byte_end":12549,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12550,"byte_end":12553,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The closure may not be called if resolution could not be performed, and it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12554,"byte_end":12632,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ also may be called more than once in the case of inlined functions.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12633,"byte_end":12704,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12705,"byte_end":12708,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Symbols yielded represent the execution at the specified `addr`, returning","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12709,"byte_end":12787,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ file/line pairs for that address (if available).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12788,"byte_end":12840,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12841,"byte_end":12844,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that if you have a `Frame` then it's recommended to use the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12845,"byte_end":12913,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ `resolve_frame` function instead of this one.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12914,"byte_end":12963,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12964,"byte_end":12967,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12968,"byte_end":12991,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12992,"byte_end":12995,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":12996,"byte_end":13071,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13072,"byte_end":13129,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13130,"byte_end":13133,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13134,"byte_end":13146,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13147,"byte_end":13150,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13151,"byte_end":13229,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13230,"byte_end":13301,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13302,"byte_end":13379,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13380,"byte_end":13452,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13453,"byte_end":13456,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13457,"byte_end":13470,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13471,"byte_end":13474,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13475,"byte_end":13482,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13483,"byte_end":13510,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13511,"byte_end":13514,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13515,"byte_end":13530,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13531,"byte_end":13565,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/         let ip = frame.ip();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13566,"byte_end":13598,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13599,"byte_end":13602,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/         backtrace::resolve(ip, |symbol| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13603,"byte_end":13648,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/             // ...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13649,"byte_end":13671,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13672,"byte_end":13687,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13688,"byte_end":13691,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13692,"byte_end":13739,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13740,"byte_end":13751,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13752,"byte_end":13757,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13758,"byte_end":13765,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13766,"byte_end":13789,"line_start":60,"line_end":60,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15187,"byte_end":15200,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"resolve_frame","qualname":"::symbolize::resolve_frame","value":"pub fn resolve_frame<F: FnMut(&Symbol) -> ()>(&Frame, F)","parent":null,"children":[],"decl_id":null,"docs":" Resolve a previously capture frame to a symbol, passing the symbol to the\n specified closure.","sig":null,"attributes":[{"value":"/ Resolve a previously capture frame to a symbol, passing the symbol to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":13941,"byte_end":14018,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ specified closure.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14019,"byte_end":14041,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14042,"byte_end":14045,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This function performs the same function as `resolve` except that it takes a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14046,"byte_end":14126,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ `Frame` as an argument instead of an address. This can allow some platform","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14127,"byte_end":14205,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ implementations of backtracing to provide more accurate symbol information","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14206,"byte_end":14284,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ or information about inline frames for example. It's recommended to use this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14285,"byte_end":14365,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ if you can.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14366,"byte_end":14381,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14382,"byte_end":14385,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14386,"byte_end":14409,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14410,"byte_end":14413,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14414,"byte_end":14489,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14490,"byte_end":14547,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14548,"byte_end":14551,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14552,"byte_end":14564,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14565,"byte_end":14568,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function strives to never panic, but if the `cb` provided panics then","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14569,"byte_end":14647,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ some platforms will force a double panic to abort the process. Some","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14648,"byte_end":14719,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/ platforms use a C library which internally uses callbacks which cannot be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14720,"byte_end":14797,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ unwound through, so panicking from `cb` may trigger a process abort.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14798,"byte_end":14870,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14871,"byte_end":14874,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14875,"byte_end":14888,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14889,"byte_end":14892,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14893,"byte_end":14900,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ extern crate backtrace;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14901,"byte_end":14928,"line_start":90,"line_end":90,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14929,"byte_end":14932,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14933,"byte_end":14948,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/     backtrace::trace(|frame| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14949,"byte_end":14983,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/         backtrace::resolve_frame(frame, |symbol| {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":14984,"byte_end":15038,"line_start":94,"line_end":94,"column_start":1,"column_end":55}},{"value":"/             // ...","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15039,"byte_end":15061,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15062,"byte_end":15077,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15078,"byte_end":15081,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/         false // only look at the top frame","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15082,"byte_end":15129,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/     });","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15130,"byte_end":15141,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15142,"byte_end":15147,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15148,"byte_end":15155,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15156,"byte_end":15179,"line_start":102,"line_end":102,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17167,"byte_end":17189,"line_start":158,"line_end":158,"column_start":15,"column_end":37},"name":"resolve_unsynchronized","qualname":"::symbolize::resolve_unsynchronized","value":"pub unsafe fn resolve_unsynchronized<F>(*mut c_void, F) where\nF: FnMut(&Symbol) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as `resolve`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `resolve`, only unsafe as it's unsynchronized.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":16801,"byte_end":16859,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":16860,"byte_end":16863,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarantees but is available when","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":16864,"byte_end":16944,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ the `std` feature of this crate isn't compiled in. See the `resolve`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":16945,"byte_end":17017,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/ function for more documentation and examples.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17018,"byte_end":17067,"line_start":153,"line_end":153,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17068,"byte_end":17071,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17072,"byte_end":17084,"line_start":155,"line_end":155,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17085,"byte_end":17088,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ See information on `resolve` for caveats on `cb` panicking.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17089,"byte_end":17152,"line_start":157,"line_end":157,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17695,"byte_end":17723,"line_start":174,"line_end":174,"column_start":15,"column_end":43},"name":"resolve_frame_unsynchronized","qualname":"::symbolize::resolve_frame_unsynchronized","value":"pub unsafe fn resolve_frame_unsynchronized<F>(&Frame, F) where\nF: FnMut(&Symbol) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as `resolve_frame`, only unsafe as it's unsynchronized.","sig":null,"attributes":[{"value":"/ Same as `resolve_frame`, only unsafe as it's unsynchronized.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17311,"byte_end":17375,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17376,"byte_end":17379,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This function does not have synchronization guarantees but is available","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17380,"byte_end":17455,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ when the `std` feature of this crate isn't compiled in. See the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17456,"byte_end":17523,"line_start":168,"line_end":168,"column_start":1,"column_end":68}},{"value":"/ `resolve_frame` function for more documentation and examples.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17524,"byte_end":17589,"line_start":169,"line_end":169,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17590,"byte_end":17593,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17594,"byte_end":17606,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17607,"byte_end":17610,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ See information on `resolve_frame` for caveats on `cb` panicking.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17611,"byte_end":17680,"line_start":173,"line_end":173,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18350,"byte_end":18356,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::symbolize::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":89}],"decl_id":null,"docs":" A trait representing the resolution of a symbol in a file.","sig":null,"attributes":[{"value":"/ A trait representing the resolution of a symbol in a file.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17840,"byte_end":17902,"line_start":181,"line_end":181,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17903,"byte_end":17906,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This trait is yielded as a trait object to the closure given to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17907,"byte_end":17978,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ `backtrace::resolve` function, and it is virtually dispatched as it's","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":17979,"byte_end":18052,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ unknown which implementation is behind it.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18053,"byte_end":18099,"line_start":185,"line_end":185,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18100,"byte_end":18103,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ A symbol can give contextual information about a function, for example the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18104,"byte_end":18182,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/ name, filename, line number, precise address, etc. Not all information is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18183,"byte_end":18260,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/ always available in a symbol, however, so all methods return an `Option`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18261,"byte_end":18338,"line_start":189,"line_end":189,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19038,"byte_end":19042,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"name","qualname":"<Symbol>::name","value":"pub fn name(&Self) -> Option<SymbolName>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this function.","sig":null,"attributes":[{"value":"/ Returns the name of this function.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18640,"byte_end":18678,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18683,"byte_end":18686,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The returned structure can be used to query various properties about the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18691,"byte_end":18767,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ symbol name:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18772,"byte_end":18788,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18793,"byte_end":18796,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ * The `Display` implementation will print out the demangled symbol.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18801,"byte_end":18872,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ * The raw `str` value of the symbol can be accessed (if it's valid","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18877,"byte_end":18947,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/   utf-8).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18952,"byte_end":18965,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ * The raw bytes for the symbol name can be accessed.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18970,"byte_end":19026,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19177,"byte_end":19181,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"addr","qualname":"<Symbol>::addr","value":"pub fn addr(&Self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting address of this function.\n","sig":null,"attributes":[{"value":"/ Returns the starting address of this function.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19115,"byte_end":19165,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19381,"byte_end":19393,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"filename_raw","qualname":"<Symbol>::filename_raw","value":"pub fn filename_raw(&Self) -> Option<BytesOrWideString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw filename as a slice. This is mainly useful for `no_std`\n environments.\n","sig":null,"attributes":[{"value":"/ Returns the raw filename as a slice. This is mainly useful for `no_std`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19272,"byte_end":19347,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ environments.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19352,"byte_end":19369,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19743,"byte_end":19748,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"colno","qualname":"<Symbol>::colno","value":"pub fn colno(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column number for where this symbol is currently executing.","sig":null,"attributes":[{"value":"/ Returns the column number for where this symbol is currently executing.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19481,"byte_end":19556,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19561,"byte_end":19564,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Only gimli currently provides a value here and even then only if `filename`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19569,"byte_end":19648,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/ returns `Some`, and so it is then consequently subject to similar caveats.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19653,"byte_end":19731,"line_start":225,"line_end":225,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20036,"byte_end":20042,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"lineno","qualname":"<Symbol>::lineno","value":"pub fn lineno(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number for where this symbol is currently executing.","sig":null,"attributes":[{"value":"/ Returns the line number for where this symbol is currently executing.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19811,"byte_end":19884,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19889,"byte_end":19892,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This return value is typically `Some` if `filename` returns `Some`, and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19897,"byte_end":19972,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ is consequently subject to similar caveats.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":19977,"byte_end":20024,"line_start":233,"line_end":233,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20684,"byte_end":20692,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"filename","qualname":"<Symbol>::filename","value":"pub fn filename(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file name where this function was defined.","sig":null,"attributes":[{"value":"/ Returns the file name where this function was defined.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20106,"byte_end":20164,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20169,"byte_end":20172,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This is currently only available when libbacktrace or gimli is being","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20177,"byte_end":20249,"line_start":240,"line_end":240,"column_start":5,"column_end":77}},{"value":"/ used (e.g. unix platforms other) and when a binary is compiled with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20254,"byte_end":20325,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/ debuginfo. If neither of these conditions is met then this will likely","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20330,"byte_end":20404,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ return `None`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20409,"byte_end":20427,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20432,"byte_end":20435,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20440,"byte_end":20463,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20468,"byte_end":20471,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20476,"byte_end":20551,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20556,"byte_end":20613,"line_start":248,"line_end":248,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20618,"byte_end":20641,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"allow(unreachable_code)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20646,"byte_end":20672,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22653,"byte_end":22663,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"SymbolName","qualname":"::symbolize::SymbolName","value":"SymbolName {  }","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" A wrapper around a symbol name to provide ergonomic accessors to the\n demangled name, the raw bytes, the raw string, etc.\n","sig":null,"attributes":[{"value":"/ A wrapper around a symbol name to provide ergonomic accessors to the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22422,"byte_end":22494,"line_start":314,"line_end":314,"column_start":1,"column_end":73}},{"value":"/ demangled name, the raw bytes, the raw string, etc.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22495,"byte_end":22550,"line_start":315,"line_end":315,"column_start":1,"column_end":56}},{"value":"allow(dead_code)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22622,"byte_end":22641,"line_start":317,"line_end":317,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22873,"byte_end":22876,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<SymbolName>::new","value":"pub fn new(&'a [u8]) -> SymbolName","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbol name from the raw underlying bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new symbol name from the raw underlying bytes.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22801,"byte_end":22861,"line_start":325,"line_end":325,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23499,"byte_end":23505,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SymbolName>::as_str","value":"pub fn as_str(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw (mangled) symbol name as a `str` if the symbol is valid utf-8.","sig":null,"attributes":[{"value":"/ Returns the raw (mangled) symbol name as a `str` if the symbol is valid utf-8.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23321,"byte_end":23403,"line_start":343,"line_end":343,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23408,"byte_end":23411,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation if you want the demangled version.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23416,"byte_end":23487,"line_start":345,"line_end":345,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23742,"byte_end":23750,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SymbolName>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw symbol name as a list of bytes\n","sig":null,"attributes":[{"value":"/ Returns the raw symbol name as a list of bytes","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":23680,"byte_end":23730,"line_start":353,"line_end":353,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":27169,"byte_end":27187,"line_start":459,"line_end":459,"column_start":8,"column_end":26},"name":"clear_symbol_cache","qualname":"::symbolize::clear_symbol_cache","value":"pub fn clear_symbol_cache()","parent":null,"children":[],"decl_id":null,"docs":" Attempt to reclaim that cached memory used to symbolicate addresses.","sig":null,"attributes":[{"value":"/ Attempt to reclaim that cached memory used to symbolicate addresses.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26500,"byte_end":26572,"line_start":445,"line_end":445,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26573,"byte_end":26576,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ This method will attempt to release any global data structures that have","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26577,"byte_end":26653,"line_start":447,"line_end":447,"column_start":1,"column_end":77}},{"value":"/ otherwise been cached globally or in the thread which typically represent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26654,"byte_end":26731,"line_start":448,"line_end":448,"column_start":1,"column_end":78}},{"value":"/ parsed DWARF information or similar.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26732,"byte_end":26772,"line_start":449,"line_end":449,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26773,"byte_end":26776,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26777,"byte_end":26790,"line_start":451,"line_end":451,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26791,"byte_end":26794,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ While this function is always available it doesn't actually do anything on","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26795,"byte_end":26873,"line_start":453,"line_end":453,"column_start":1,"column_end":79}},{"value":"/ most implementations. Libraries like dbghelp or libbacktrace do not provide","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26874,"byte_end":26953,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/ facilities to deallocate state and manage the allocated memory. For now the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26954,"byte_end":27033,"line_start":455,"line_end":455,"column_start":1,"column_end":80}},{"value":"/ `gimli-symbolize` feature of this crate is the only feature where this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":27034,"byte_end":27108,"line_start":456,"line_end":456,"column_start":1,"column_end":75}},{"value":"/ function has any effect.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":27109,"byte_end":27137,"line_start":457,"line_end":457,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":27138,"byte_end":27161,"line_start":458,"line_end":458,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":731},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28336,"byte_end":28341,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::types::BytesOrWideString::Bytes","value":"BytesOrWideString::Bytes(&'a [u8])","parent":{"krate":0,"index":729},"children":[],"decl_id":null,"docs":" A slice, typically provided on Unix platforms.\n","sig":null,"attributes":[{"value":"/ A slice, typically provided on Unix platforms.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28281,"byte_end":28331,"line_start":18,"line_end":18,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":734},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28402,"byte_end":28406,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Wide","qualname":"::types::BytesOrWideString::Wide","value":"BytesOrWideString::Wide(&'a [u16])","parent":{"krate":0,"index":729},"children":[],"decl_id":null,"docs":" Wide strings typically from Windows.\n","sig":null,"attributes":[{"value":"/ Wide strings typically from Windows.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28357,"byte_end":28397,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":729},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28253,"byte_end":28270,"line_start":17,"line_end":17,"column_start":10,"column_end":27},"name":"BytesOrWideString","qualname":"::types::BytesOrWideString","value":"pub enum BytesOrWideString<'a> { Bytes(&'a [u8]), Wide(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":734}],"decl_id":null,"docs":" A platform independent representation of a string. When working with `std`\n enabled it is recommended to the convenience methods for providing\n conversions to `std` types.\n","sig":null,"attributes":[{"value":"/ A platform independent representation of a string. When working with `std`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28045,"byte_end":28123,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ enabled it is recommended to the convenience methods for providing","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28124,"byte_end":28194,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ conversions to `std` types.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28195,"byte_end":28226,"line_start":15,"line_end":15,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28805,"byte_end":28817,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"to_str_lossy","qualname":"<BytesOrWideString>::to_str_lossy","value":"pub fn to_str_lossy(&Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Lossy converts to a `Cow<str>`, will allocate if `Bytes` is not valid\n UTF-8 or if `BytesOrWideString` is `Wide`.","sig":null,"attributes":[{"value":"/ Lossy converts to a `Cow<str>`, will allocate if `Bytes` is not valid","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28483,"byte_end":28556,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ UTF-8 or if `BytesOrWideString` is `Wide`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28561,"byte_end":28607,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28612,"byte_end":28615,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28620,"byte_end":28643,"line_start":29,"line_end":29,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28648,"byte_end":28651,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28656,"byte_end":28731,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28736,"byte_end":28793,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29316,"byte_end":29329,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<BytesOrWideString>::into_path_buf","value":"pub fn into_path_buf(Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Path` representation of `BytesOrWideString`.","sig":null,"attributes":[{"value":"/ Provides a `Path` representation of `BytesOrWideString`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29058,"byte_end":29118,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29123,"byte_end":29126,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29131,"byte_end":29154,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29159,"byte_end":29162,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29167,"byte_end":29242,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":29247,"byte_end":29304,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30781,"byte_end":30793,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"BacktraceFmt","qualname":"::print::BacktraceFmt","value":"BacktraceFmt {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" A formatter for backtraces.","sig":null,"attributes":[{"value":"/ A formatter for backtraces.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30528,"byte_end":30559,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30560,"byte_end":30563,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type can be used to print a backtrace regardless of where the backtrace","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30564,"byte_end":30644,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ itself comes from. If you have a `Backtrace` type then its `Debug`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30645,"byte_end":30715,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ implementation already uses this printing format.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":30716,"byte_end":30769,"line_start":16,"line_end":16,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31193,"byte_end":31198,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::print::PrintFmt::Short","value":"PrintFmt::Short","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" Prints a terser backtrace which ideally only contains relevant information\n","sig":null,"attributes":[{"value":"/ Prints a terser backtrace which ideally only contains relevant information","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31110,"byte_end":31188,"line_start":28,"line_end":28,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31270,"byte_end":31274,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Full","qualname":"::print::PrintFmt::Full","value":"PrintFmt::Full","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" Prints a backtrace that contains all possible information\n","sig":null,"attributes":[{"value":"/ Prints a backtrace that contains all possible information","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31204,"byte_end":31265,"line_start":30,"line_end":30,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31299,"byte_end":31314,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::print::PrintFmt::__Nonexhaustive","value":"PrintFmt::__Nonexhaustive","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":740},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31095,"byte_end":31103,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"PrintFmt","qualname":"::print::PrintFmt","value":"pub enum PrintFmt { Short, Full, __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745}],"decl_id":null,"docs":" The styles of printing that we can print\n","sig":null,"attributes":[{"value":"/ The styles of printing that we can print","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31003,"byte_end":31047,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31772,"byte_end":31775,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BacktraceFmt>::new","value":"pub fn new(&'a mut fmt::Formatter, PrintFmt,\n           &'a mut dyn FnMut(&mut fmt::Formatter, BytesOrWideString) ->\n                   fmt::Result + 'b) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BacktraceFmt` which will write output to the provided\n `fmt`.","sig":null,"attributes":[{"value":"/ Create a new `BacktraceFmt` which will write output to the provided","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31359,"byte_end":31430,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ `fmt`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31435,"byte_end":31445,"line_start":38,"line_end":38,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31450,"byte_end":31453,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The `format` argument will control the style in which the backtrace is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31458,"byte_end":31532,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ printed, and the `print_path` argument will be used to print the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31537,"byte_end":31605,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ `BytesOrWideString` instances of filenames. This type itself doesn't do","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31610,"byte_end":31685,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ any printing of filenames, but this callback is required to do so.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31690,"byte_end":31760,"line_start":43,"line_end":43,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32402,"byte_end":32413,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"add_context","qualname":"<BacktraceFmt>::add_context","value":"pub fn add_context(&mut Self) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a preamble for the backtrace about to be printed.","sig":null,"attributes":[{"value":"/ Prints a preamble for the backtrace about to be printed.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32123,"byte_end":32183,"line_start":58,"line_end":58,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32188,"byte_end":32191,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This is required on some platforms for backtraces to be fully","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32196,"byte_end":32261,"line_start":60,"line_end":60,"column_start":5,"column_end":70}},{"value":"/ symbolicated later, and otherwise this should just be the first method","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32266,"byte_end":32340,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ you call after creating a `BacktraceFmt`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32345,"byte_end":32390,"line_start":62,"line_end":62,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32801,"byte_end":32806,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"frame","qualname":"<BacktraceFmt>::frame","value":"pub fn frame(&mut Self) -> BacktraceFrameFmt","parent":null,"children":[],"decl_id":null,"docs":" Adds a frame to the backtrace output.","sig":null,"attributes":[{"value":"/ Adds a frame to the backtrace output.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32553,"byte_end":32594,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32599,"byte_end":32602,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This commit returns an RAII instance of a `BacktraceFrameFmt` which can be used","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32607,"byte_end":32690,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ to actually print a frame, and on destruction it will increment the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32695,"byte_end":32766,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ frame counter.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32771,"byte_end":32789,"line_start":73,"line_end":73,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33113,"byte_end":33119,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"finish","qualname":"<BacktraceFmt>::finish","value":"pub fn finish(&mut Self) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Completes the backtrace output.","sig":null,"attributes":[{"value":"/ Completes the backtrace output.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32954,"byte_end":32989,"line_start":81,"line_end":81,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":32994,"byte_end":32997,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is currently a no-op but is added for future compatibility with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33002,"byte_end":33074,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ backtrace formats.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33079,"byte_end":33101,"line_start":84,"line_end":84,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33384,"byte_end":33401,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"BacktraceFrameFmt","qualname":"::print::BacktraceFrameFmt","value":"BacktraceFrameFmt {  }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" A formatter for just one frame of a backtrace.","sig":null,"attributes":[{"value":"/ A formatter for just one frame of a backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33254,"byte_end":33304,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33305,"byte_end":33308,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This type is created by the `BacktraceFmt::frame` function.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33309,"byte_end":33372,"line_start":93,"line_end":93,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33923,"byte_end":33938,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"backtrace_frame","qualname":"<BacktraceFrameFmt>::backtrace_frame","value":"pub fn backtrace_frame(&mut Self, &BacktraceFrame) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a `BacktraceFrame` with this frame formatter.","sig":null,"attributes":[{"value":"/ Prints a `BacktraceFrame` with this frame formatter.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33528,"byte_end":33584,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33589,"byte_end":33592,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will recursively print all `BacktraceSymbol` instances within the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33597,"byte_end":33671,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ `BacktraceFrame`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33676,"byte_end":33697,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33702,"byte_end":33705,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33710,"byte_end":33733,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33738,"byte_end":33741,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33746,"byte_end":33821,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33826,"byte_end":33883,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33888,"byte_end":33911,"line_start":109,"line_end":109,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34533,"byte_end":34549,"line_start":128,"line_end":128,"column_start":12,"column_end":28},"name":"backtrace_symbol","qualname":"<BacktraceFrameFmt>::backtrace_symbol","value":"pub fn backtrace_symbol(&mut Self, &BacktraceFrame, &BacktraceSymbol)\n-> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a `BacktraceSymbol` within a `BacktraceFrame`.","sig":null,"attributes":[{"value":"/ Prints a `BacktraceSymbol` within a `BacktraceFrame`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34250,"byte_end":34307,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34312,"byte_end":34315,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34320,"byte_end":34343,"line_start":123,"line_end":123,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34348,"byte_end":34351,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34356,"byte_end":34431,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34436,"byte_end":34493,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":34498,"byte_end":34521,"line_start":127,"line_end":127,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35298,"byte_end":35304,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"symbol","qualname":"<BacktraceFrameFmt>::symbol","value":"pub fn symbol(&mut Self, &Frame, &super::Symbol) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Prints a raw traced `Frame` and `Symbol`, typically from within the raw\n callbacks of this crate.\n","sig":null,"attributes":[{"value":"/ Prints a raw traced `Frame` and `Symbol`, typically from within the raw","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35178,"byte_end":35253,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ callbacks of this crate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35258,"byte_end":35286,"line_start":149,"line_end":149,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35850,"byte_end":35859,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"print_raw","qualname":"<BacktraceFrameFmt>::print_raw","value":"pub fn print_raw(&mut Self, *mut c_void, Option<SymbolName>,\n                 Option<BytesOrWideString>, Option<u32>) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Adds a raw frame to the backtrace output.","sig":null,"attributes":[{"value":"/ Adds a raw frame to the backtrace output.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35589,"byte_end":35634,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35639,"byte_end":35642,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method, unlike the previous, takes the raw arguments in case","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35647,"byte_end":35716,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ they're being source from different locations. Note that this may be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35721,"byte_end":35793,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ called multiple times for one frame.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":35798,"byte_end":35838,"line_start":165,"line_end":165,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36439,"byte_end":36460,"line_start":181,"line_end":181,"column_start":12,"column_end":33},"name":"print_raw_with_column","qualname":"<BacktraceFrameFmt>::print_raw_with_column","value":"pub fn print_raw_with_column(&mut Self, *mut c_void, Option<SymbolName>,\n                             Option<BytesOrWideString>, Option<u32>,\n                             Option<u32>) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Adds a raw frame to the backtrace output, including column information.","sig":null,"attributes":[{"value":"/ Adds a raw frame to the backtrace output, including column information.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36150,"byte_end":36225,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36230,"byte_end":36233,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method, like the previous, takes the raw arguments in case","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36238,"byte_end":36305,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/ they're being source from different locations. Note that this may be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36310,"byte_end":36382,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ called multiple times for one frame.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":36387,"byte_end":36427,"line_start":180,"line_end":180,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235783,"byte_end":13235792,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"Backtrace","qualname":"::capture::Backtrace","value":"Backtrace {  }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" Representation of an owned and self-contained backtrace.","sig":null,"attributes":[{"value":"/ Representation of an owned and self-contained backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235129,"byte_end":13235189,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235190,"byte_end":13235193,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure can be used to capture a backtrace at various points in a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235194,"byte_end":13235270,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ program and later used to inspect what the backtrace was at that time.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235271,"byte_end":13235345,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235346,"byte_end":13235349,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Backtrace` supports pretty-printing of backtraces through its `Debug`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235350,"byte_end":13235424,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235425,"byte_end":13235444,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235445,"byte_end":13235448,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235449,"byte_end":13235472,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235473,"byte_end":13235476,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235477,"byte_end":13235552,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13235553,"byte_end":13235610,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":869},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236518,"byte_end":13236532,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"BacktraceFrame","qualname":"::capture::BacktraceFrame","value":"BacktraceFrame {  }","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" Captured version of a frame in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a frame in a backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236151,"byte_end":13236198,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236199,"byte_end":13236202,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `Backtrace::frames` and represents one","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236203,"byte_end":13236282,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ stack frame in a captured backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236283,"byte_end":13236323,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236324,"byte_end":13236327,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236328,"byte_end":13236351,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236352,"byte_end":13236355,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236356,"byte_end":13236431,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236432,"byte_end":13236489,"line_start":47,"line_end":47,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238055,"byte_end":13238070,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"BacktraceSymbol","qualname":"::capture::BacktraceSymbol","value":"BacktraceSymbol {  }","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" Captured version of a symbol in a backtrace.","sig":null,"attributes":[{"value":"/ Captured version of a symbol in a backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237536,"byte_end":13237584,"line_start":91,"line_end":91,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237585,"byte_end":13237588,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This type is returned as a list from `BacktraceFrame::symbols` and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237589,"byte_end":13237659,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/ represents the metadata for a symbol in a backtrace.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237660,"byte_end":13237716,"line_start":94,"line_end":94,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237717,"byte_end":13237720,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237721,"byte_end":13237744,"line_start":96,"line_end":96,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237745,"byte_end":13237748,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237749,"byte_end":13237824,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13237825,"byte_end":13237882,"line_start":99,"line_end":99,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239375,"byte_end":13239378,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<Backtrace>::new","value":"pub fn new() -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Captures a backtrace at the callsite of this function, returning an\n owned representation.","sig":null,"attributes":[{"value":"/ Captures a backtrace at the callsite of this function, returning an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238229,"byte_end":13238300,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ owned representation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238305,"byte_end":13238330,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238335,"byte_end":13238338,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This function is useful for representing a backtrace as an object in","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238343,"byte_end":13238415,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ Rust. This returned value can be sent across threads and printed","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238420,"byte_end":13238488,"line_start":116,"line_end":116,"column_start":5,"column_end":73}},{"value":"/ elsewhere, and the purpose of this value is to be entirely self","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238493,"byte_end":13238560,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ contained.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238565,"byte_end":13238579,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238584,"byte_end":13238587,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that on some platforms acquiring a full backtrace and resolving it","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238592,"byte_end":13238667,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ can be extremely expensive. If the cost is too much for your application","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238672,"byte_end":13238748,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ it's recommended to instead use `Backtrace::new_unresolved()` which","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238753,"byte_end":13238824,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ avoids the symbol resolution step (which typically takes the longest)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238829,"byte_end":13238902,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ and allows deferring that to a later date.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238907,"byte_end":13238953,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238958,"byte_end":13238961,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238966,"byte_end":13238980,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238985,"byte_end":13238988,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238993,"byte_end":13239000,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use backtrace::Backtrace;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239005,"byte_end":13239034,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239039,"byte_end":13239042,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let current_backtrace = Backtrace::new();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239047,"byte_end":13239092,"line_start":131,"line_end":131,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239097,"byte_end":13239104,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239109,"byte_end":13239112,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239117,"byte_end":13239140,"line_start":134,"line_end":134,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239145,"byte_end":13239148,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239153,"byte_end":13239228,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239233,"byte_end":13239290,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"inline(never)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239295,"byte_end":13239311,"line_start":138,"line_end":138,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240544,"byte_end":13240558,"line_start":169,"line_end":169,"column_start":12,"column_end":26},"name":"new_unresolved","qualname":"<Backtrace>::new_unresolved","value":"pub fn new_unresolved() -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Similar to `new` except that this does not resolve any symbols, this\n simply captures the backtrace as a list of addresses.","sig":null,"attributes":[{"value":"/ Similar to `new` except that this does not resolve any symbols, this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239495,"byte_end":13239567,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ simply captures the backtrace as a list of addresses.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239572,"byte_end":13239629,"line_start":146,"line_end":146,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239634,"byte_end":13239637,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ At a later time the `resolve` function can be called to resolve this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239642,"byte_end":13239714,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ backtrace's symbols into readable names. This function exists because","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239719,"byte_end":13239792,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ the resolution process can sometimes take a significant amount of time","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239797,"byte_end":13239871,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ whereas any one backtrace may only be rarely printed.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239876,"byte_end":13239933,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239938,"byte_end":13239941,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239946,"byte_end":13239960,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239965,"byte_end":13239968,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239973,"byte_end":13239980,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use backtrace::Backtrace;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13239985,"byte_end":13240014,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240019,"byte_end":13240022,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mut current_backtrace = Backtrace::new_unresolved();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240027,"byte_end":13240087,"line_start":158,"line_end":158,"column_start":5,"column_end":65}},{"value":"/ println!(\"{:?}\", current_backtrace); // no symbol names","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240092,"byte_end":13240151,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/ current_backtrace.resolve();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240156,"byte_end":13240188,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/ println!(\"{:?}\", current_backtrace); // symbol names now present","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240193,"byte_end":13240261,"line_start":161,"line_end":161,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240266,"byte_end":13240273,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240278,"byte_end":13240281,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240286,"byte_end":13240309,"line_start":164,"line_end":164,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240314,"byte_end":13240317,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240322,"byte_end":13240397,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240402,"byte_end":13240459,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"inline(never)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13240464,"byte_end":13240480,"line_start":168,"line_end":168,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241685,"byte_end":13241691,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"frames","qualname":"<Backtrace>::frames","value":"pub fn frames(&Self) -> &[BacktraceFrame]","parent":null,"children":[],"decl_id":null,"docs":" Returns the frames from when this backtrace was captured.","sig":null,"attributes":[{"value":"/ Returns the frames from when this backtrace was captured.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241232,"byte_end":13241293,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241298,"byte_end":13241301,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The first entry of this slice is likely the function `Backtrace::new`,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241306,"byte_end":13241380,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ and the last frame is likely something about how this thread or the main","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241385,"byte_end":13241461,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/ function started.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241466,"byte_end":13241487,"line_start":198,"line_end":198,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241492,"byte_end":13241495,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241500,"byte_end":13241523,"line_start":200,"line_end":200,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241528,"byte_end":13241531,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241536,"byte_end":13241611,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241616,"byte_end":13241673,"line_start":203,"line_end":203,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242259,"byte_end":13242266,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Backtrace>::resolve","value":"pub fn resolve(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" If this backtrace was created from `new_unresolved` then this function\n will resolve all addresses in the backtrace to their symbolic names.","sig":null,"attributes":[{"value":"/ If this backtrace was created from `new_unresolved` then this function","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241781,"byte_end":13241855,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ will resolve all addresses in the backtrace to their symbolic names.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241860,"byte_end":13241932,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241937,"byte_end":13241940,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If this backtrace has been previously resolved or was created through","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13241945,"byte_end":13242018,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ `new`, this function does nothing.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242023,"byte_end":13242061,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242066,"byte_end":13242069,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242074,"byte_end":13242097,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242102,"byte_end":13242105,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242110,"byte_end":13242185,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13242190,"byte_end":13242247,"line_start":217,"line_end":217,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243960,"byte_end":13243962,"line_start":274,"line_end":274,"column_start":12,"column_end":14},"name":"ip","qualname":"<BacktraceFrame>::ip","value":"pub fn ip(&Self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Same as `Frame::ip`","sig":null,"attributes":[{"value":"/ Same as `Frame::ip`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243739,"byte_end":13243762,"line_start":268,"line_end":268,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243767,"byte_end":13243770,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243775,"byte_end":13243798,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243803,"byte_end":13243806,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243811,"byte_end":13243886,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243891,"byte_end":13243948,"line_start":273,"line_end":273,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244270,"byte_end":13244284,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"symbol_address","qualname":"<BacktraceFrame>::symbol_address","value":"pub fn symbol_address(&Self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Same as `Frame::symbol_address`","sig":null,"attributes":[{"value":"/ Same as `Frame::symbol_address`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244037,"byte_end":13244072,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244077,"byte_end":13244080,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244085,"byte_end":13244108,"line_start":280,"line_end":280,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244113,"byte_end":13244116,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244121,"byte_end":13244196,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244201,"byte_end":13244258,"line_start":283,"line_end":283,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244609,"byte_end":13244628,"line_start":294,"line_end":294,"column_start":12,"column_end":31},"name":"module_base_address","qualname":"<BacktraceFrame>::module_base_address","value":"pub fn module_base_address(&Self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Frame::module_base_address`","sig":null,"attributes":[{"value":"/ Same as `Frame::module_base_address`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244371,"byte_end":13244411,"line_start":288,"line_end":288,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244416,"byte_end":13244419,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244424,"byte_end":13244447,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244452,"byte_end":13244455,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244460,"byte_end":13244535,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244540,"byte_end":13244597,"line_start":293,"line_end":293,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245451,"byte_end":13245458,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"symbols","qualname":"<BacktraceFrame>::symbols","value":"pub fn symbols(&Self) -> &[BacktraceSymbol]","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of symbols that this frame corresponds to.","sig":null,"attributes":[{"value":"/ Returns the list of symbols that this frame corresponds to.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244771,"byte_end":13244834,"line_start":300,"line_end":300,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244839,"byte_end":13244842,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Normally there is only one symbol per frame, but sometimes if a number","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244847,"byte_end":13244921,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ of functions are inlined into one frame then multiple symbols will be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13244926,"byte_end":13244999,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ returned. The first symbol listed is the \"innermost function\", whereas","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245004,"byte_end":13245078,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ the last symbol is the outermost (last caller).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245083,"byte_end":13245134,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245139,"byte_end":13245142,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Note that if this frame came from an unresolved backtrace then this will","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245147,"byte_end":13245223,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/ return an empty list.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245228,"byte_end":13245253,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245258,"byte_end":13245261,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245266,"byte_end":13245289,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245294,"byte_end":13245297,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245302,"byte_end":13245377,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245382,"byte_end":13245439,"line_start":313,"line_end":313,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245811,"byte_end":13245815,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"name","qualname":"<BacktraceSymbol>::name","value":"pub fn name(&Self) -> Option<SymbolName>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::name`","sig":null,"attributes":[{"value":"/ Same as `Symbol::name`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245587,"byte_end":13245613,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245618,"byte_end":13245621,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245626,"byte_end":13245649,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245654,"byte_end":13245657,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245662,"byte_end":13245737,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245742,"byte_end":13245799,"line_start":325,"line_end":325,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246141,"byte_end":13246145,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"addr","qualname":"<BacktraceSymbol>::addr","value":"pub fn addr(&Self) -> Option<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::addr`","sig":null,"attributes":[{"value":"/ Same as `Symbol::addr`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245917,"byte_end":13245943,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245948,"byte_end":13245951,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245956,"byte_end":13245979,"line_start":332,"line_end":332,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245984,"byte_end":13245987,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245992,"byte_end":13246067,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246072,"byte_end":13246129,"line_start":335,"line_end":335,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246461,"byte_end":13246469,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"filename","qualname":"<BacktraceSymbol>::filename","value":"pub fn filename(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::filename`","sig":null,"attributes":[{"value":"/ Same as `Symbol::filename`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246233,"byte_end":13246263,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246268,"byte_end":13246271,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246276,"byte_end":13246299,"line_start":342,"line_end":342,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246304,"byte_end":13246307,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246312,"byte_end":13246387,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246392,"byte_end":13246449,"line_start":345,"line_end":345,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246778,"byte_end":13246784,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"lineno","qualname":"<BacktraceSymbol>::lineno","value":"pub fn lineno(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::lineno`","sig":null,"attributes":[{"value":"/ Same as `Symbol::lineno`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246552,"byte_end":13246580,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246585,"byte_end":13246588,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246593,"byte_end":13246616,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246621,"byte_end":13246624,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246629,"byte_end":13246704,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246709,"byte_end":13246766,"line_start":355,"line_end":355,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13247065,"byte_end":13247070,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"colno","qualname":"<BacktraceSymbol>::colno","value":"pub fn colno(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Symbol::colno`","sig":null,"attributes":[{"value":"/ Same as `Symbol::colno`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246840,"byte_end":13246867,"line_start":360,"line_end":360,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246872,"byte_end":13246875,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Required features","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246880,"byte_end":13246903,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246908,"byte_end":13246911,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This function requires the `std` feature of the `backtrace` crate to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246916,"byte_end":13246991,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ enabled, and the `std` feature is enabled by default.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13246996,"byte_end":13247053,"line_start":365,"line_end":365,"column_start":5,"column_end":62}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9140,"byte_end":9145,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10562,"byte_end":10567,"line_start":119,"line_end":119,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191819,"byte_end":13191824,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191849,"byte_end":13191854,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191864,"byte_end":13191869,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13193434,"byte_end":13193439,"line_start":81,"line_end":81,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15427,"byte_end":15438,"line_start":113,"line_end":113,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18627,"byte_end":18633,"line_start":197,"line_end":197,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20778,"byte_end":20784,"line_start":256,"line_end":256,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22156,"byte_end":22171,"line_start":302,"line_end":302,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22780,"byte_end":22790,"line_start":324,"line_end":324,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":24944,"byte_end":24954,"line_start":397,"line_end":397,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26182,"byte_end":26192,"line_start":433,"line_end":433,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13217773,"byte_end":13217777,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13218165,"byte_end":13218169,"line_start":29,"line_end":29,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13218325,"byte_end":13218329,"line_start":37,"line_end":37,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/stash.rs","byte_start":13216041,"byte_end":13216046,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13201596,"byte_end":13201603,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13202986,"byte_end":13202993,"line_start":110,"line_end":110,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","byte_start":13219196,"byte_end":13219203,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","byte_start":13221569,"byte_end":13221575,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13207245,"byte_end":13207250,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13214185,"byte_end":13214191,"line_start":411,"line_end":411,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28455,"byte_end":28472,"line_start":25,"line_end":25,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":30128,"byte_end":30145,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31332,"byte_end":31344,"line_start":36,"line_end":36,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33492,"byte_end":33509,"line_start":99,"line_end":99,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":40930,"byte_end":40947,"line_start":298,"line_end":298,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236804,"byte_end":13236809,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238213,"byte_end":13238222,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243230,"byte_end":13243239,"line_start":243,"line_end":243,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243415,"byte_end":13243429,"line_start":252,"line_end":252,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243629,"byte_end":13243638,"line_start":261,"line_end":261,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243718,"byte_end":13243732,"line_start":267,"line_end":267,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245565,"byte_end":13245580,"line_start":319,"line_end":319,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13247143,"byte_end":13247152,"line_start":371,"line_end":371,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248505,"byte_end":13248514,"line_start":408,"line_end":408,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248603,"byte_end":13248617,"line_start":414,"line_end":414,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248877,"byte_end":13248892,"line_start":423,"line_end":423,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5163,"byte_end":5167,"line_start":144,"line_end":144,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5693,"byte_end":5702,"line_start":165,"line_end":165,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":9140,"byte_end":9145,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/mod.rs","byte_start":10562,"byte_end":10567,"line_start":119,"line_end":119,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191819,"byte_end":13191824,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":247},"to":{"krate":1,"index":3016}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191849,"byte_end":13191854,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":247},"to":{"krate":1,"index":3028}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13191864,"byte_end":13191869,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/backtrace/libunwind.rs","byte_start":13193434,"byte_end":13193439,"line_start":81,"line_end":81,"column_start":16,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":247},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":15427,"byte_end":15438,"line_start":113,"line_end":113,"column_start":10,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":18627,"byte_end":18633,"line_start":197,"line_end":197,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":20778,"byte_end":20784,"line_start":256,"line_end":256,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22156,"byte_end":22171,"line_start":302,"line_end":302,"column_start":18,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":22780,"byte_end":22790,"line_start":324,"line_end":324,"column_start":10,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":24944,"byte_end":24954,"line_start":397,"line_end":397,"column_start":35,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":100},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/mod.rs","byte_start":26182,"byte_end":26192,"line_start":433,"line_end":433,"column_start":33,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":100},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13217773,"byte_end":13217777,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13218165,"byte_end":13218169,"line_start":29,"line_end":29,"column_start":16,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":495},"to":{"krate":1,"index":3227}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/mmap_unix.rs","byte_start":13218325,"byte_end":13218329,"line_start":37,"line_end":37,"column_start":15,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":495},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/stash.rs","byte_start":13216041,"byte_end":13216046,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13201596,"byte_end":13201603,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13202986,"byte_end":13202993,"line_start":110,"line_end":110,"column_start":13,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","byte_start":13219196,"byte_end":13219203,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli/elf.rs","byte_start":13221569,"byte_end":13221575,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13207245,"byte_end":13207250,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/symbolize/gimli.rs","byte_start":13214185,"byte_end":13214191,"line_start":411,"line_end":411,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":28455,"byte_end":28472,"line_start":25,"line_end":25,"column_start":10,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/types.rs","byte_start":30128,"byte_end":30145,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":729},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":31332,"byte_end":31344,"line_start":36,"line_end":36,"column_start":14,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":33492,"byte_end":33509,"line_start":99,"line_end":99,"column_start":6,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/print.rs","byte_start":40930,"byte_end":40947,"line_start":298,"line_end":298,"column_start":15,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":175},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13236804,"byte_end":13236809,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13238213,"byte_end":13238222,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243230,"byte_end":13243239,"line_start":243,"line_end":243,"column_start":36,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243415,"byte_end":13243429,"line_start":252,"line_end":252,"column_start":29,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":869},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243629,"byte_end":13243638,"line_start":261,"line_end":261,"column_start":36,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13243718,"byte_end":13243732,"line_start":267,"line_end":267,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13245565,"byte_end":13245580,"line_start":319,"line_end":319,"column_start":6,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13247143,"byte_end":13247152,"line_start":371,"line_end":371,"column_start":21,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248505,"byte_end":13248514,"line_start":408,"line_end":408,"column_start":18,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248603,"byte_end":13248617,"line_start":414,"line_end":414,"column_start":21,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":869},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/capture.rs","byte_start":13248877,"byte_end":13248892,"line_start":423,"line_end":423,"column_start":21,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":884},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5163,"byte_end":5167,"line_start":144,"line_end":144,"column_start":15,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.64/src/lib.rs","byte_start":5693,"byte_end":5702,"line_start":165,"line_end":165,"column_start":19,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":3251}}]}