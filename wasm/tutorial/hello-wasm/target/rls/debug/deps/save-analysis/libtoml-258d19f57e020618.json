{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10","program":"/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","toml","/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=258d19f57e020618","-C","extra-filename=-258d19f57e020618","--out-dir","/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","-L","dependency=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps","--extern","serde=/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libserde-2290027247269018.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/workspaces/rust-playground/wasm/tutorial/hello-wasm/target/rls/debug/deps/libtoml-258d19f57e020618.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[12108519894984923980,0]},"crate_root":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src","external_crates":[{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[446372525052170201,0]}},{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[3946986419385088045,0]}}],"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":0,"byte_end":4370,"line_start":1,"line_end":175,"column_start":1,"column_end":26}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4618,"byte_end":4626,"line_start":14,"line_end":14,"column_start":20,"column_end":28},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4628,"byte_end":4646,"line_start":14,"line_end":14,"column_start":30,"column_end":48},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1313},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4072,"byte_end":4077,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4139,"byte_end":4148,"line_start":164,"line_end":164,"column_start":15,"column_end":24},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4150,"byte_end":4166,"line_start":164,"line_end":164,"column_start":26,"column_end":42},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4168,"byte_end":4174,"line_start":164,"line_end":164,"column_start":44,"column_end":50},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":459},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4176,"byte_end":4186,"line_start":164,"line_end":164,"column_start":52,"column_end":62},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4232,"byte_end":4242,"line_start":167,"line_end":167,"column_start":14,"column_end":24},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4244,"byte_end":4252,"line_start":167,"line_end":167,"column_start":26,"column_end":34},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4254,"byte_end":4266,"line_start":167,"line_end":167,"column_start":36,"column_end":48},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1559},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","byte_start":189337,"byte_end":189348,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1241}},{"kind":"Use","ref_id":{"krate":20,"index":1777},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","byte_start":189350,"byte_end":189366,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1241}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4362,"byte_end":4369,"line_start":175,"line_end":175,"column_start":18,"column_end":25},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":0,"byte_end":4370,"line_start":1,"line_end":175,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":422},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1241},{"krate":0,"index":1265},{"krate":0,"index":1310}],"decl_id":null,"docs":" A [TOML]-parsing library","sig":null,"attributes":[{"value":"/ A [TOML]-parsing library","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements a [TOML] v0.5.0 compatible parser,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":33,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ primarily supporting the [`serde`] library for encoding/decoding","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":96,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ various types in Rust.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":165,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":192,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":196,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":271,"byte_end":274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":275,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ [package]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":287,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ name = \"toml\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":301,"byte_end":318,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ version = \"0.4.2\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":319,"byte_end":340,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/ authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":341,"byte_end":396,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":397,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":401,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ serde = \"1.0\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":420,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":438,"byte_end":445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":446,"byte_end":449,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":450,"byte_end":529,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":530,"byte_end":607,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":608,"byte_end":611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## TOML values","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":612,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":631,"byte_end":634,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A value in TOML is represented with the `Value` enum in this crate:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":635,"byte_end":706,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":707,"byte_end":710,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":711,"byte_end":729,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ pub enum Value {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":730,"byte_end":750,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     String(String),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":751,"byte_end":774,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     Integer(i64),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":775,"byte_end":796,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     Float(f64),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":797,"byte_end":816,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     Boolean(bool),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":817,"byte_end":839,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/     Datetime(Datetime),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":840,"byte_end":867,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/     Array(Array),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":868,"byte_end":889,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     Table(Table),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":890,"byte_end":911,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":912,"byte_end":917,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":918,"byte_end":925,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":926,"byte_end":929,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TOML is similar to JSON with the notable addition of a `Datetime`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":930,"byte_end":999,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1000,"byte_end":1067,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ formats.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1068,"byte_end":1080,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Parsing TOML","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1085,"byte_end":1104,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The easiest way to parse a TOML document is via the `Value` type:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1109,"byte_end":1178,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1179,"byte_end":1182,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1183,"byte_end":1194,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use toml::Value;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1195,"byte_end":1215,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1216,"byte_end":1219,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1220,"byte_end":1276,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1281,"byte_end":1332,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1333,"byte_end":1340,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1341,"byte_end":1344,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The `Value` type implements a number of convenience methods and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1345,"byte_end":1412,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/ traits; the example above uses `FromStr` to parse a `str` into a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1413,"byte_end":1481,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ `Value`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1482,"byte_end":1494,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1495,"byte_end":1498,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Deserialization and Serialization","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1499,"byte_end":1539,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1544,"byte_end":1598,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1599,"byte_end":1673,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ `Serializer` traits. Namely, you'll find:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1674,"byte_end":1719,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1720,"byte_end":1723,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * `Deserialize for Value`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1724,"byte_end":1753,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ * `Serialize for Value`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1754,"byte_end":1781,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ * `Deserialize for Datetime`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1782,"byte_end":1814,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ * `Serialize for Datetime`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1815,"byte_end":1845,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ * `Deserializer for de::Deserializer`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1846,"byte_end":1887,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ * `Serializer for ser::Serializer`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1888,"byte_end":1926,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ * `Deserializer for Value`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1927,"byte_end":1957,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1958,"byte_end":1961,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":1962,"byte_end":2028,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ `Value` type as well as the `Datetime` type in this crate. You can also","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2029,"byte_end":2104,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ use the `Deserializer`, `Serializer`, or `Value` type itself to act as","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2105,"byte_end":2179,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ a deserializer/serializer for arbitrary types.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2180,"byte_end":2230,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2231,"byte_end":2234,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ An example of deserializing with TOML is:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2235,"byte_end":2280,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2285,"byte_end":2296,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2297,"byte_end":2313,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2314,"byte_end":2344,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2345,"byte_end":2367,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2368,"byte_end":2371,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2372,"byte_end":2398,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2399,"byte_end":2418,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2419,"byte_end":2438,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2439,"byte_end":2465,"line_start":87,"line_end":87,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2466,"byte_end":2485,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2486,"byte_end":2491,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2492,"byte_end":2495,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2496,"byte_end":2522,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/ struct Keys {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2523,"byte_end":2540,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2541,"byte_end":2564,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2565,"byte_end":2596,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2597,"byte_end":2602,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2603,"byte_end":2606,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2607,"byte_end":2622,"line_start":97,"line_end":97,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2623,"byte_end":2670,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/         ip = '127.0.0.1'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2671,"byte_end":2699,"line_start":99,"line_end":99,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/         [keys]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2704,"byte_end":2722,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"/         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2723,"byte_end":2763,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2764,"byte_end":2804,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/     \"#).unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2805,"byte_end":2826,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2827,"byte_end":2830,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2831,"byte_end":2874,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(config.port, None);","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2875,"byte_end":2913,"line_start":107,"line_end":107,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2914,"byte_end":2974,"line_start":108,"line_end":108,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":2975,"byte_end":3053,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3054,"byte_end":3059,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3060,"byte_end":3067,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3068,"byte_end":3071,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ You can serialize types in a similar fashion:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3072,"byte_end":3121,"line_start":113,"line_end":113,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3126,"byte_end":3137,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3138,"byte_end":3154,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3155,"byte_end":3185,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3186,"byte_end":3208,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3209,"byte_end":3212,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3213,"byte_end":3237,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3238,"byte_end":3257,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3258,"byte_end":3277,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3278,"byte_end":3304,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3305,"byte_end":3324,"line_start":124,"line_end":124,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3325,"byte_end":3330,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3331,"byte_end":3334,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3335,"byte_end":3359,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/ struct Keys {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3360,"byte_end":3377,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3378,"byte_end":3401,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3402,"byte_end":3433,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3434,"byte_end":3439,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3440,"byte_end":3443,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3444,"byte_end":3459,"line_start":133,"line_end":133,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3460,"byte_end":3489,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3490,"byte_end":3530,"line_start":135,"line_end":135,"column_start":1,"column_end":41}},{"value":"/         port: None,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3531,"byte_end":3554,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/         keys: Keys {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3555,"byte_end":3579,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3580,"byte_end":3636,"line_start":138,"line_end":138,"column_start":1,"column_end":57}},{"value":"/             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3637,"byte_end":3699,"line_start":139,"line_end":139,"column_start":1,"column_end":63}},{"value":"/         },","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3700,"byte_end":3714,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3715,"byte_end":3725,"line_start":141,"line_end":141,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3730,"byte_end":3783,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3784,"byte_end":3789,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3790,"byte_end":3797,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3802,"byte_end":3847,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"/ [Cargo]: https://crates.io/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3848,"byte_end":3879,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ [`serde`]: https://serde.rs/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3880,"byte_end":3912,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":3966,"byte_end":3988,"line_start":152,"line_end":152,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":1313},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":104},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":122},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":154},{"krate":0,"index":186},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":280},{"krate":0,"index":286},{"krate":0,"index":292},{"krate":0,"index":298},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":321}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"/ Definition of a TOML value","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4372,"byte_end":4402,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1314},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4817,"byte_end":4823,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4784,"byte_end":4812,"line_start":20,"line_end":20,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4871,"byte_end":4878,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4837,"byte_end":4866,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4921,"byte_end":4926,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4889,"byte_end":4916,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4971,"byte_end":4978,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4937,"byte_end":4966,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5025,"byte_end":5033,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4990,"byte_end":5020,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5081,"byte_end":5086,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5049,"byte_end":5076,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5131,"byte_end":5136,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5099,"byte_end":5126,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1313},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4772,"byte_end":4777,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n    String(String),\n    Integer(i64),\n    Float(f64),\n    Boolean(bool),\n    Datetime(Datetime),\n    Array(Array),\n    Table(Table),\n}","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":4692,"byte_end":4727,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5231,"byte_end":5236,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5148,"byte_end":5221,"line_start":36,"line_end":36,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5335,"byte_end":5340,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"BTreeMap<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5252,"byte_end":5325,"line_start":39,"line_end":39,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5651,"byte_end":5659,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"pub fn try_from<T>(T) -> Result<Value, ::ser::Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5386,"byte_end":5458,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5463,"byte_end":5487,"line_start":44,"line_end":44,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5492,"byte_end":5495,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5500,"byte_end":5578,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5583,"byte_end":5639,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6386,"byte_end":6394,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"pub fn try_into<'de, T>(Self) -> Result<T, ::de::Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5790,"byte_end":5847,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5852,"byte_end":5855,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5860,"byte_end":5939,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5944,"byte_end":6018,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6023,"byte_end":6102,"line_start":58,"line_end":58,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6107,"byte_end":6186,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6191,"byte_end":6267,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6272,"byte_end":6350,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6355,"byte_end":6374,"line_start":62,"line_end":62,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7025,"byte_end":7028,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"pub fn get<I: Index>(&Self, I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6534,"byte_end":6608,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6613,"byte_end":6689,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6694,"byte_end":6704,"line_start":71,"line_end":71,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6709,"byte_end":6712,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6717,"byte_end":6788,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6793,"byte_end":6868,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6873,"byte_end":6947,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":6952,"byte_end":7013,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7612,"byte_end":7619,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"pub fn get_mut<I: Index>(&mut Self, I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7113,"byte_end":7186,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7191,"byte_end":7262,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7267,"byte_end":7291,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7296,"byte_end":7299,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7304,"byte_end":7375,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7380,"byte_end":7455,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7460,"byte_end":7534,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7539,"byte_end":7600,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7779,"byte_end":7789,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"pub fn as_integer(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7716,"byte_end":7767,"line_start":93,"line_end":93,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7944,"byte_end":7954,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":7889,"byte_end":7932,"line_start":98,"line_end":98,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8077,"byte_end":8085,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"pub fn as_float(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8019,"byte_end":8065,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8235,"byte_end":8243,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8183,"byte_end":8223,"line_start":108,"line_end":108,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8368,"byte_end":8375,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8306,"byte_end":8356,"line_start":113,"line_end":113,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8530,"byte_end":8537,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8476,"byte_end":8518,"line_start":118,"line_end":118,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8667,"byte_end":8673,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8599,"byte_end":8655,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8828,"byte_end":8834,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"pub fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8780,"byte_end":8816,"line_start":128,"line_end":128,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9135,"byte_end":9146,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8895,"byte_end":8947,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8952,"byte_end":8955,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":8960,"byte_end":9030,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9035,"byte_end":9055,"line_start":136,"line_end":136,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9060,"byte_end":9063,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9068,"byte_end":9082,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9087,"byte_end":9111,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9116,"byte_end":9123,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9312,"byte_end":9323,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"pub fn is_datetime(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9257,"byte_end":9300,"line_start":145,"line_end":145,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9448,"byte_end":9456,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"pub fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9389,"byte_end":9436,"line_start":150,"line_end":150,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9625,"byte_end":9637,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9566,"byte_end":9613,"line_start":155,"line_end":155,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9812,"byte_end":9820,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9759,"byte_end":9800,"line_start":160,"line_end":160,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9941,"byte_end":9949,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"pub fn as_table(&Self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":9883,"byte_end":9929,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10112,"byte_end":10124,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"pub fn as_table_mut(&mut Self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10054,"byte_end":10100,"line_start":170,"line_end":170,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10293,"byte_end":10301,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"pub fn is_table(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10241,"byte_end":10281,"line_start":175,"line_end":175,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10436,"byte_end":10445,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"pub fn same_type(&Self, &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10364,"byte_end":10424,"line_start":180,"line_end":180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11030,"byte_end":11038,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"pub fn type_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":10948,"byte_end":11018,"line_start":195,"line_end":195,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13395,"byte_end":13400,"line_start":285,"line_end":285,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13138,"byte_end":13189,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13190,"byte_end":13193,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13194,"byte_end":13274,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13275,"byte_end":13286,"line_start":281,"line_end":281,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13287,"byte_end":13290,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13291,"byte_end":13366,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13367,"byte_end":13384,"line_start":284,"line_end":284,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13437,"byte_end":13442,"line_start":287,"line_end":287,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"pub fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13518,"byte_end":13527,"line_start":289,"line_end":289,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"pub fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13735,"byte_end":13741,"line_start":295,"line_end":295,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13588,"byte_end":13668,"line_start":292,"line_end":292,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13669,"byte_end":13709,"line_start":293,"line_end":293,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":36078,"byte_end":36086,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime {  }","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35245,"byte_end":35277,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35278,"byte_end":35281,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35282,"byte_end":35362,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35363,"byte_end":35442,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35443,"byte_end":35471,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35472,"byte_end":35475,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35476,"byte_end":35547,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35548,"byte_end":35626,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35627,"byte_end":35644,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35645,"byte_end":35648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35649,"byte_end":35728,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35729,"byte_end":35806,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35807,"byte_end":35821,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35822,"byte_end":35825,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35826,"byte_end":35894,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35895,"byte_end":35973,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":35974,"byte_end":36038,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":36281,"byte_end":36299,"line_start":33,"line_end":33,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1424}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":36168,"byte_end":36245,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":1462},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":455},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":457},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":459},{"krate":0,"index":1521},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":464},{"krate":0,"index":471},{"krate":0,"index":482},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":559},{"krate":0,"index":567},{"krate":0,"index":575},{"krate":0,"index":583},{"krate":0,"index":591},{"krate":0,"index":601},{"krate":0,"index":609},{"krate":0,"index":614},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":714},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":772},{"krate":0,"index":779},{"krate":0,"index":786},{"krate":0,"index":793},{"krate":0,"index":800},{"krate":0,"index":809}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"/ Serializing Rust structures into TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":47922,"byte_end":47964,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":47965,"byte_end":47968,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":47969,"byte_end":48047,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48048,"byte_end":48125,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ are also provided at the top of the crate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48126,"byte_end":48172,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48173,"byte_end":48176,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48177,"byte_end":48256,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48257,"byte_end":48330,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48331,"byte_end":48410,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48411,"byte_end":48490,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48491,"byte_end":48571,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ may use the `tables_last` function in this module like so:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48572,"byte_end":48634,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48635,"byte_end":48638,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48639,"byte_end":48650,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48651,"byte_end":48696,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ # extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48697,"byte_end":48721,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48722,"byte_end":48758,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48759,"byte_end":48783,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48784,"byte_end":48805,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48806,"byte_end":48831,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48832,"byte_end":48891,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48892,"byte_end":48942,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48943,"byte_end":48948,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48949,"byte_end":48977,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":48978,"byte_end":49009,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49010,"byte_end":49028,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49029,"byte_end":49036,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49475,"byte_end":49481,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T: ?Sized>(&T) -> Result<Vec<u8>, Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49170,"byte_end":49231,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49232,"byte_end":49235,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49236,"byte_end":49312,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49313,"byte_end":49388,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49389,"byte_end":49467,"line_start":42,"line_end":42,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50623,"byte_end":50632,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49609,"byte_end":49668,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49669,"byte_end":49672,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49673,"byte_end":49749,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49750,"byte_end":49825,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49826,"byte_end":49904,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49905,"byte_end":49908,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49909,"byte_end":49923,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49924,"byte_end":49927,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49928,"byte_end":49935,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49936,"byte_end":49952,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49953,"byte_end":49983,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":49984,"byte_end":50006,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50007,"byte_end":50010,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50011,"byte_end":50035,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50036,"byte_end":50055,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50056,"byte_end":50083,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50084,"byte_end":50089,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50090,"byte_end":50093,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50094,"byte_end":50118,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50119,"byte_end":50140,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50141,"byte_end":50160,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50161,"byte_end":50184,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50185,"byte_end":50213,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50214,"byte_end":50236,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50237,"byte_end":50242,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50243,"byte_end":50246,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50247,"byte_end":50262,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50263,"byte_end":50292,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/         database: Database {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50293,"byte_end":50325,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/             ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50326,"byte_end":50372,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/             port: vec![8001, 8002, 8003],","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50373,"byte_end":50418,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/             connection_max: 5000,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50419,"byte_end":50456,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/             enabled: false,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50457,"byte_end":50488,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/         },","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50489,"byte_end":50503,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50504,"byte_end":50514,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50515,"byte_end":50518,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50519,"byte_end":50572,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/     println!(\"{}\", toml)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50573,"byte_end":50601,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50602,"byte_end":50607,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50608,"byte_end":50615,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51043,"byte_end":51059,"line_start":101,"line_end":101,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"pub fn to_string_pretty<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50826,"byte_end":50894,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50895,"byte_end":50898,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50899,"byte_end":50971,"line_start":99,"line_end":99,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":50972,"byte_end":51035,"line_start":100,"line_end":100,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51593,"byte_end":51608,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51367,"byte_end":51443,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51448,"byte_end":51462,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51467,"byte_end":51470,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51475,"byte_end":51547,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51552,"byte_end":51588,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51746,"byte_end":51758,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51615,"byte_end":51682,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51687,"byte_end":51741,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1467},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51857,"byte_end":51867,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51765,"byte_end":51833,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51973,"byte_end":51987,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Arrays in TOML must have a homogenous type, but a heterogeneous array\n was emitted.\n","sig":null,"attributes":[{"value":"/ Arrays in TOML must have a homogenous type, but a heterogeneous array","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51874,"byte_end":51947,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was emitted.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51952,"byte_end":51968,"line_start":128,"line_end":128,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52164,"byte_end":52179,"line_start":134,"line_end":134,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51994,"byte_end":52066,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52071,"byte_end":52140,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52145,"byte_end":52159,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1473},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52225,"byte_end":52236,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52186,"byte_end":52220,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52284,"byte_end":52297,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52243,"byte_end":52279,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52373,"byte_end":52388,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52304,"byte_end":52368,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1479},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52487,"byte_end":52493,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52395,"byte_end":52468,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52473,"byte_end":52482,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1482},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52527,"byte_end":52542,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ser::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1462},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51355,"byte_end":51360,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"pub enum Error {\n    UnsupportedType,\n    KeyNotString,\n    KeyNewline,\n    ArrayMixedType,\n    ValueAfterTable,\n    DateInvalid,\n    NumberInvalid,\n    UnsupportedNone,\n    Custom(String),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1482}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":51256,"byte_end":51306,"line_start":109,"line_end":109,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53830,"byte_end":53840,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53357,"byte_end":53399,"line_start":194,"line_end":194,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53400,"byte_end":53403,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53404,"byte_end":53480,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53481,"byte_end":53555,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53556,"byte_end":53632,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53633,"byte_end":53676,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53677,"byte_end":53680,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53681,"byte_end":53758,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53759,"byte_end":53818,"line_start":202,"line_end":202,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54302,"byte_end":54314,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54508,"byte_end":54516,"line_start":236,"line_end":236,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer)","parent":{"krate":0,"index":471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":477},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54546,"byte_end":54551,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":471},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54475,"byte_end":54489,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"pub enum SerializeTable<'a:'b, 'b> {\n    Datetime(&'b mut Serializer),\n    Table {\n        ser: &'b mut Serializer,\n        key: String,\n        first: Cell<bool>,\n        table_emitted: Cell<bool>,\n    },\n}","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54923,"byte_end":54926,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54713,"byte_end":54788,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54793,"byte_end":54796,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54801,"byte_end":54877,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54882,"byte_end":54911,"line_start":249,"line_end":249,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55490,"byte_end":55496,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"pub fn pretty(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55115,"byte_end":55151,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55156,"byte_end":55159,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55164,"byte_end":55193,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55198,"byte_end":55201,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55206,"byte_end":55280,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55285,"byte_end":55318,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55323,"byte_end":55414,"line_start":264,"line_end":264,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55419,"byte_end":55478,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56330,"byte_end":56343,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"pub fn pretty_string(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55800,"byte_end":55836,"line_start":277,"line_end":277,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55841,"byte_end":55844,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55849,"byte_end":55924,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":55929,"byte_end":55999,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56004,"byte_end":56007,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56012,"byte_end":56026,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56031,"byte_end":56034,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56039,"byte_end":56054,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56059,"byte_end":56062,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56067,"byte_end":56085,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56090,"byte_end":56116,"line_start":287,"line_end":287,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56121,"byte_end":56146,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56151,"byte_end":56158,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56163,"byte_end":56166,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56171,"byte_end":56189,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56194,"byte_end":56197,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56202,"byte_end":56220,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56225,"byte_end":56251,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56256,"byte_end":56270,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56275,"byte_end":56282,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56287,"byte_end":56294,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56299,"byte_end":56306,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56311,"byte_end":56318,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57239,"byte_end":57260,"line_start":335,"line_end":335,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"pub fn pretty_string_literal(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56564,"byte_end":56620,"line_start":309,"line_end":309,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56625,"byte_end":56628,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56633,"byte_end":56708,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56713,"byte_end":56783,"line_start":312,"line_end":312,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56788,"byte_end":56791,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56796,"byte_end":56871,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56876,"byte_end":56908,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56913,"byte_end":56916,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56921,"byte_end":56935,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56940,"byte_end":56943,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56948,"byte_end":56963,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56968,"byte_end":56971,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56976,"byte_end":56994,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":56999,"byte_end":57025,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57030,"byte_end":57055,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57060,"byte_end":57067,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57072,"byte_end":57075,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57080,"byte_end":57098,"line_start":326,"line_end":326,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57103,"byte_end":57106,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57111,"byte_end":57129,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57134,"byte_end":57160,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57165,"byte_end":57179,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57184,"byte_end":57191,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57196,"byte_end":57203,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57208,"byte_end":57215,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57220,"byte_end":57227,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58448,"byte_end":58460,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"pub fn pretty_array(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57749,"byte_end":57784,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57789,"byte_end":57792,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57797,"byte_end":57865,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57870,"byte_end":57873,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57878,"byte_end":57949,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57954,"byte_end":57957,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":57962,"byte_end":58034,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58039,"byte_end":58052,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58057,"byte_end":58133,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58138,"byte_end":58167,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58172,"byte_end":58175,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58180,"byte_end":58194,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58199,"byte_end":58202,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58207,"byte_end":58222,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58227,"byte_end":58230,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58235,"byte_end":58253,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58258,"byte_end":58284,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58289,"byte_end":58296,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58301,"byte_end":58304,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58309,"byte_end":58327,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58332,"byte_end":58335,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58340,"byte_end":58358,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58363,"byte_end":58376,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58381,"byte_end":58395,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58400,"byte_end":58414,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58419,"byte_end":58424,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58429,"byte_end":58436,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58792,"byte_end":58811,"line_start":391,"line_end":391,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"pub fn pretty_array_indent(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58679,"byte_end":58715,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58720,"byte_end":58723,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":58728,"byte_end":58780,"line_start":390,"line_end":390,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":59444,"byte_end":59471,"line_start":411,"line_end":411,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"pub fn pretty_array_trailing_comma(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":59293,"byte_end":59367,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":59372,"byte_end":59375,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":59380,"byte_end":59432,"line_start":410,"line_end":410,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":714},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96920,"byte_end":96931,"line_start":1552,"line_end":1552,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"pub fn tables_last<'a, I, K, V, S>(&'a I, S) -> Result<S::Ok, S::Error> where\n&'a I: IntoIterator<Item = (K, V)>, K: ser::Serialize, V: ser::Serialize,\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96228,"byte_end":96303,"line_start":1531,"line_end":1531,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96304,"byte_end":96313,"line_start":1532,"line_end":1532,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96314,"byte_end":96317,"line_start":1533,"line_end":1533,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96318,"byte_end":96398,"line_start":1534,"line_end":1534,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96399,"byte_end":96478,"line_start":1535,"line_end":1535,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96479,"byte_end":96510,"line_start":1536,"line_end":1536,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96511,"byte_end":96514,"line_start":1537,"line_end":1537,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96515,"byte_end":96526,"line_start":1538,"line_end":1538,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96527,"byte_end":96572,"line_start":1539,"line_end":1539,"column_start":1,"column_end":46}},{"value":"/ # extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96573,"byte_end":96597,"line_start":1540,"line_end":1540,"column_start":1,"column_end":25}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96598,"byte_end":96634,"line_start":1541,"line_end":1541,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96635,"byte_end":96659,"line_start":1542,"line_end":1542,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96660,"byte_end":96681,"line_start":1543,"line_end":1543,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96682,"byte_end":96707,"line_start":1544,"line_end":1544,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96708,"byte_end":96767,"line_start":1545,"line_end":1545,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96768,"byte_end":96818,"line_start":1546,"line_end":1546,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96819,"byte_end":96824,"line_start":1547,"line_end":1547,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96825,"byte_end":96853,"line_start":1548,"line_end":1548,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96854,"byte_end":96885,"line_start":1549,"line_end":1549,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96886,"byte_end":96904,"line_start":1550,"line_end":1550,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96905,"byte_end":96912,"line_start":1551,"line_end":1551,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":829},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":895},{"krate":0,"index":901},{"krate":0,"index":913},{"krate":0,"index":924},{"krate":0,"index":932},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":976},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":992},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1010},{"krate":0,"index":1014},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1032},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1055},{"krate":0,"index":1122},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1145},{"krate":0,"index":1151},{"krate":0,"index":1896},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1930},{"krate":0,"index":1156},{"krate":0,"index":1159}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"/ Deserializing TOML into Rust structures.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104162,"byte_end":104206,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104207,"byte_end":104210,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104211,"byte_end":104290,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104291,"byte_end":104365,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ provided at the top of the crate.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104366,"byte_end":104403,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":876},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104865,"byte_end":104875,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'de, T>(&'de [u8]) -> Result<T, Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104683,"byte_end":104725,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104726,"byte_end":104729,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104730,"byte_end":104804,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":104805,"byte_end":104857,"line_start":25,"line_end":25,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":879},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105817,"byte_end":105825,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<'de, T>(&'de str) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105085,"byte_end":105123,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105124,"byte_end":105127,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105128,"byte_end":105198,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105199,"byte_end":105237,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105238,"byte_end":105241,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105242,"byte_end":105256,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105257,"byte_end":105260,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105261,"byte_end":105268,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105269,"byte_end":105285,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105286,"byte_end":105316,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105317,"byte_end":105339,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105340,"byte_end":105343,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105344,"byte_end":105370,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105371,"byte_end":105390,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105391,"byte_end":105413,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105414,"byte_end":105435,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105436,"byte_end":105441,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105442,"byte_end":105445,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105446,"byte_end":105472,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105473,"byte_end":105491,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105492,"byte_end":105513,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105514,"byte_end":105519,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105520,"byte_end":105523,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105524,"byte_end":105539,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105540,"byte_end":105587,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/         title = 'TOML Example'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105588,"byte_end":105622,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105623,"byte_end":105626,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/         [owner]","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105627,"byte_end":105646,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/         name = 'Lisa'","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105647,"byte_end":105672,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     \"#).unwrap();","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105673,"byte_end":105694,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105695,"byte_end":105698,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105699,"byte_end":105748,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105749,"byte_end":105795,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105796,"byte_end":105801,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":105802,"byte_end":105809,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":106098,"byte_end":106103,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1552}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":106010,"byte_end":106062,"line_start":79,"line_end":79,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":109078,"byte_end":109090,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":109022,"byte_end":109066,"line_start":195,"line_end":195,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":111638,"byte_end":111648,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"MapVisitor","qualname":"::de::MapVisitor","value":"MapVisitor {  }","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132420,"byte_end":132423,"line_start":924,"line_end":924,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(&'a str) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132321,"byte_end":132390,"line_start":922,"line_end":922,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132395,"byte_end":132408,"line_start":923,"line_end":923,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132882,"byte_end":132885,"line_start":936,"line_end":936,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"pub fn end(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132622,"byte_end":132696,"line_start":932,"line_end":932,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132701,"byte_end":132777,"line_start":933,"line_end":933,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132782,"byte_end":132841,"line_start":934,"line_end":934,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132846,"byte_end":132870,"line_start":935,"line_end":935,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133299,"byte_end":133330,"line_start":946,"line_end":946,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"pub fn set_require_newline_after_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132946,"byte_end":133019,"line_start":940,"line_end":940,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133024,"byte_end":133096,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133101,"byte_end":133123,"line_start":942,"line_end":942,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133128,"byte_end":133131,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133136,"byte_end":133208,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":133213,"byte_end":133287,"line_start":945,"line_end":945,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157535,"byte_end":157543,"line_start":1613,"line_end":1613,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"pub fn line_col(&Self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157406,"byte_end":157482,"line_start":1610,"line_end":1610,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157487,"byte_end":157490,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157495,"byte_end":157523,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":158360,"byte_end":158375,"line_start":1644,"line_end":1644,"column_start":12,"column_end":27},"name":"add_key_context","qualname":"<Error>::add_key_context","value":"pub fn add_key_context(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Do not call this method, it may be removed at any time, it's just an\n internal implementation detail.\n","sig":null,"attributes":[{"value":"/ Do not call this method, it may be removed at any time, it's just an","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":158217,"byte_end":158289,"line_start":1641,"line_end":1641,"column_start":5,"column_end":77}},{"value":"/ internal implementation detail.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":158294,"byte_end":158329,"line_start":1642,"line_end":1642,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166661,"byte_end":166665,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166538,"byte_end":166604,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166708,"byte_end":166713,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166672,"byte_end":166699,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166772,"byte_end":166775,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":166726,"byte_end":166763,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1241},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1261},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","byte_start":208116,"byte_end":208127,"line_start":416,"line_end":416,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"pub fn insert_toml(&mut Value, &[&str], Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/macros.rs","byte_start":208327,"byte_end":208336,"line_start":422,"line_end":422,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"pub fn push_toml(&mut Value, &[&str])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2068},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210556,"byte_end":210563,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.\n","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210448,"byte_end":210527,"line_start":37,"line_end":37,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210800,"byte_end":210805,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210732,"byte_end":210788,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210920,"byte_end":210923,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210854,"byte_end":210908,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211022,"byte_end":211026,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"pub fn span(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210970,"byte_end":211010,"line_start":59,"line_end":59,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211171,"byte_end":211181,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211096,"byte_end":211159,"line_start":64,"line_end":64,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211284,"byte_end":211291,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211225,"byte_end":211272,"line_start":69,"line_end":69,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211405,"byte_end":211412,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"pub fn get_mut(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211338,"byte_end":211393,"line_start":74,"line_end":74,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5374,"byte_end":5379,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11434,"byte_end":11439,"line_start":209,"line_end":209,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11613,"byte_end":11618,"line_start":217,"line_end":217,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11780,"byte_end":11785,"line_start":223,"line_end":223,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11925,"byte_end":11930,"line_start":230,"line_end":230,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":12107,"byte_end":12112,"line_start":236,"line_end":236,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":12379,"byte_end":12384,"line_start":246,"line_end":246,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13809,"byte_end":13815,"line_start":298,"line_end":298,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":14662,"byte_end":14668,"line_start":333,"line_end":333,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15174,"byte_end":15179,"line_start":353,"line_end":353,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15351,"byte_end":15356,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15497,"byte_end":15502,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":17054,"byte_end":17059,"line_start":405,"line_end":405,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":17243,"byte_end":17255,"line_start":411,"line_end":411,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":20493,"byte_end":20498,"line_start":502,"line_end":502,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23114,"byte_end":23129,"line_start":584,"line_end":584,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23283,"byte_end":23298,"line_start":592,"line_end":592,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23962,"byte_end":23977,"line_start":618,"line_end":618,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":24169,"byte_end":24184,"line_start":627,"line_end":627,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":25283,"byte_end":25288,"line_start":663,"line_end":663,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":25430,"byte_end":25440,"line_start":673,"line_end":673,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":31255,"byte_end":31267,"line_start":856,"line_end":856,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":31640,"byte_end":31652,"line_start":872,"line_end":872,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32028,"byte_end":32040,"line_start":887,"line_end":887,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32415,"byte_end":32427,"line_start":902,"line_end":902,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32793,"byte_end":32805,"line_start":917,"line_end":917,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":33746,"byte_end":33758,"line_start":949,"line_end":949,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":34268,"byte_end":34283,"line_start":969,"line_end":969,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":34524,"byte_end":34539,"line_start":979,"line_end":979,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37082,"byte_end":37090,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37218,"byte_end":37226,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37694,"byte_end":37698,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37863,"byte_end":37867,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":38210,"byte_end":38216,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":38500,"byte_end":38508,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":44546,"byte_end":44554,"line_start":309,"line_end":309,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":44880,"byte_end":44888,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":45077,"byte_end":45092,"line_start":327,"line_end":327,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":45925,"byte_end":45936,"line_start":354,"line_end":354,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":46125,"byte_end":46137,"line_start":360,"line_end":360,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":46830,"byte_end":46848,"line_start":387,"line_end":387,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47039,"byte_end":47046,"line_start":393,"line_end":393,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47668,"byte_end":47686,"line_start":414,"line_end":414,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47821,"byte_end":47839,"line_start":420,"line_end":420,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52716,"byte_end":52729,"line_start":161,"line_end":161,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53039,"byte_end":53053,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54692,"byte_end":54702,"line_start":245,"line_end":245,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":77894,"byte_end":77906,"line_start":952,"line_end":952,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":79422,"byte_end":79434,"line_start":1002,"line_end":1002,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":79801,"byte_end":79813,"line_start":1017,"line_end":1017,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":80177,"byte_end":80189,"line_start":1032,"line_end":1032,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":80545,"byte_end":80559,"line_start":1047,"line_end":1047,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":82514,"byte_end":82528,"line_start":1110,"line_end":1110,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":84319,"byte_end":84333,"line_start":1168,"line_end":1168,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":89393,"byte_end":89408,"line_start":1328,"line_end":1328,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":94540,"byte_end":94545,"line_start":1485,"line_end":1485,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":95339,"byte_end":95344,"line_start":1502,"line_end":1502,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96066,"byte_end":96071,"line_start":1519,"line_end":1519,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":97785,"byte_end":97795,"line_start":1582,"line_end":1582,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":97913,"byte_end":97923,"line_start":1588,"line_end":1588,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":101775,"byte_end":101785,"line_start":1712,"line_end":1712,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102144,"byte_end":102154,"line_start":1726,"line_end":1726,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102520,"byte_end":102530,"line_start":1740,"line_end":1740,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102891,"byte_end":102901,"line_start":1754,"line_end":1754,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":103254,"byte_end":103264,"line_start":1768,"line_end":1768,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":103787,"byte_end":103797,"line_start":1787,"line_end":1787,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":111972,"byte_end":111982,"line_start":291,"line_end":291,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":115687,"byte_end":115697,"line_start":395,"line_end":395,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":116866,"byte_end":116876,"line_start":433,"line_end":433,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":117924,"byte_end":117939,"line_start":475,"line_end":475,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":118104,"byte_end":118119,"line_start":483,"line_end":483,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":118762,"byte_end":118779,"line_start":507,"line_end":507,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":119108,"byte_end":119125,"line_start":521,"line_end":521,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":124109,"byte_end":124114,"line_start":665,"line_end":665,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":124421,"byte_end":124440,"line_start":679,"line_end":679,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":125687,"byte_end":125707,"line_start":718,"line_end":718,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":126297,"byte_end":126322,"line_start":740,"line_end":740,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":126883,"byte_end":126906,"line_start":761,"line_end":761,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":127474,"byte_end":127497,"line_start":780,"line_end":780,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":128203,"byte_end":128226,"line_start":802,"line_end":802,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":129049,"byte_end":129070,"line_start":830,"line_end":830,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132298,"byte_end":132310,"line_start":921,"line_end":921,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1076},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157394,"byte_end":157399,"line_start":1609,"line_end":1609,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":158482,"byte_end":158487,"line_start":1649,"line_end":1649,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":161862,"byte_end":161867,"line_start":1727,"line_end":1727,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":163639,"byte_end":163644,"line_start":1758,"line_end":1758,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":163998,"byte_end":164004,"line_start":1776,"line_end":1776,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":165413,"byte_end":165414,"line_start":1831,"line_end":1831,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":165851,"byte_end":165856,"line_start":1846,"line_end":1846,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":167944,"byte_end":167953,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":181488,"byte_end":181496,"line_start":459,"line_end":459,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":181920,"byte_end":181931,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":182774,"byte_end":182779,"line_start":509,"line_end":509,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210715,"byte_end":210722,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211495,"byte_end":211502,"line_start":80,"line_end":80,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211766,"byte_end":211780,"line_start":88,"line_end":88,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":213216,"byte_end":213223,"line_start":133,"line_end":133,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4032,"byte_end":4037,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4102,"byte_end":4105,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":422}},{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4197,"byte_end":4199,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":829}},{"kind":"Mod","span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/lib.rs","byte_start":4305,"byte_end":4311,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1241}}],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":5374,"byte_end":5379,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11434,"byte_end":11439,"line_start":209,"line_end":209,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":3312}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11613,"byte_end":11618,"line_start":217,"line_end":217,"column_start":30,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":3316}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11780,"byte_end":11785,"line_start":223,"line_end":223,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":11925,"byte_end":11930,"line_start":230,"line_end":230,"column_start":39,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":12107,"byte_end":12112,"line_start":236,"line_end":236,"column_start":64,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":12379,"byte_end":12384,"line_start":246,"line_end":246,"column_start":75,"column_end":80},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13402,"byte_end":13408,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":110},"to":{"krate":0,"index":105}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":13809,"byte_end":13815,"line_start":298,"line_end":298,"column_start":17,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":110}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":14662,"byte_end":14668,"line_start":333,"line_end":333,"column_start":16,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":105}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15174,"byte_end":15179,"line_start":353,"line_end":353,"column_start":23,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15351,"byte_end":15356,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":15497,"byte_end":15502,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1313},"to":{"krate":20,"index":2100}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":17054,"byte_end":17059,"line_start":405,"line_end":405,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1313},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":17243,"byte_end":17255,"line_start":411,"line_end":411,"column_start":40,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":158},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":20493,"byte_end":20498,"line_start":502,"line_end":502,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1313},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23114,"byte_end":23129,"line_start":584,"line_end":584,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23283,"byte_end":23298,"line_start":592,"line_end":592,"column_start":34,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":197},"to":{"krate":20,"index":1701}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":23962,"byte_end":23977,"line_start":618,"line_end":618,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":24169,"byte_end":24184,"line_start":627,"line_end":627,"column_start":34,"column_end":49},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":207},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":25283,"byte_end":25288,"line_start":663,"line_end":663,"column_start":54,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1313},"to":{"krate":20,"index":1777}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":25430,"byte_end":25440,"line_start":673,"line_end":673,"column_start":26,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":225},"to":{"krate":20,"index":2103}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":31255,"byte_end":31267,"line_start":856,"line_end":856,"column_start":28,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":269},"to":{"krate":20,"index":2153}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":31640,"byte_end":31652,"line_start":872,"line_end":872,"column_start":30,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":269},"to":{"krate":20,"index":2159}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32028,"byte_end":32040,"line_start":887,"line_end":887,"column_start":36,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":269},"to":{"krate":20,"index":2165}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32415,"byte_end":32427,"line_start":902,"line_end":902,"column_start":37,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":269},"to":{"krate":20,"index":2171}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":32793,"byte_end":32805,"line_start":917,"line_end":917,"column_start":28,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":271},"to":{"krate":20,"index":2177}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":33746,"byte_end":33758,"line_start":949,"line_end":949,"column_start":31,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":271},"to":{"krate":20,"index":2188}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":34268,"byte_end":34283,"line_start":969,"line_end":969,"column_start":44,"column_end":59},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":312},"to":{"krate":20,"index":1570}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/value.rs","byte_start":34524,"byte_end":34539,"line_start":979,"line_end":979,"column_start":36,"column_end":51},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":312},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37082,"byte_end":37090,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37218,"byte_end":37226,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37694,"byte_end":37698,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1429},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":37863,"byte_end":37867,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1439},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":38210,"byte_end":38216,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":38500,"byte_end":38508,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":44546,"byte_end":44554,"line_start":309,"line_end":309,"column_start":25,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1413},"to":{"krate":20,"index":2100}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":44880,"byte_end":44888,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1413},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":45077,"byte_end":45092,"line_start":327,"line_end":327,"column_start":40,"column_end":55},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":380},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":45925,"byte_end":45936,"line_start":354,"line_end":354,"column_start":36,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":390},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":46125,"byte_end":46137,"line_start":360,"line_end":360,"column_start":40,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":396},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":46830,"byte_end":46848,"line_start":387,"line_end":387,"column_start":36,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":404},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47039,"byte_end":47046,"line_start":393,"line_end":393,"column_start":40,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":410},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47668,"byte_end":47686,"line_start":414,"line_end":414,"column_start":23,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/datetime.rs","byte_start":47821,"byte_end":47839,"line_start":420,"line_end":420,"column_start":23,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1423},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":52716,"byte_end":52729,"line_start":161,"line_end":161,"column_start":6,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":53039,"byte_end":53053,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":54692,"byte_end":54702,"line_start":245,"line_end":245,"column_start":10,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":77894,"byte_end":77906,"line_start":952,"line_end":952,"column_start":36,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":464},"to":{"krate":20,"index":2153}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":79422,"byte_end":79434,"line_start":1002,"line_end":1002,"column_start":38,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":464},"to":{"krate":20,"index":2159}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":79801,"byte_end":79813,"line_start":1017,"line_end":1017,"column_start":45,"column_end":57},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":464},"to":{"krate":20,"index":2171}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":80177,"byte_end":80189,"line_start":1032,"line_end":1032,"column_start":44,"column_end":56},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":464},"to":{"krate":20,"index":2165}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":80545,"byte_end":80559,"line_start":1047,"line_end":1047,"column_start":36,"column_end":50},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":471},"to":{"krate":20,"index":2177}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":82514,"byte_end":82528,"line_start":1110,"line_end":1110,"column_start":39,"column_end":53},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":471},"to":{"krate":20,"index":2188}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":84319,"byte_end":84333,"line_start":1168,"line_end":1168,"column_start":34,"column_end":48},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":609},"to":{"krate":20,"index":2103}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":89393,"byte_end":89408,"line_start":1328,"line_end":1328,"column_start":26,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":657},"to":{"krate":20,"index":2103}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":94540,"byte_end":94545,"line_start":1485,"line_end":1485,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":95339,"byte_end":95344,"line_start":1502,"line_end":1502,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1462},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":96066,"byte_end":96071,"line_start":1519,"line_end":1519,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1462},"to":{"krate":20,"index":9531}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":97785,"byte_end":97795,"line_start":1582,"line_end":1582,"column_start":9,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":97913,"byte_end":97923,"line_start":1588,"line_end":1588,"column_start":41,"column_end":51},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2103}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":101775,"byte_end":101785,"line_start":1712,"line_end":1712,"column_start":43,"column_end":53},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2153}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102144,"byte_end":102154,"line_start":1726,"line_end":1726,"column_start":45,"column_end":55},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2159}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102520,"byte_end":102530,"line_start":1740,"line_end":1740,"column_start":52,"column_end":62},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2171}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":102891,"byte_end":102901,"line_start":1754,"line_end":1754,"column_start":51,"column_end":61},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2165}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":103254,"byte_end":103264,"line_start":1768,"line_end":1768,"column_start":43,"column_end":53},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2177}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/ser.rs","byte_start":103787,"byte_end":103797,"line_start":1787,"line_end":1787,"column_start":46,"column_end":56},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":723},"to":{"krate":20,"index":2188}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":111972,"byte_end":111982,"line_start":291,"line_end":291,"column_start":38,"column_end":48},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":901},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":115687,"byte_end":115697,"line_start":395,"line_end":395,"column_start":38,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":901},"to":{"krate":20,"index":1701}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":116866,"byte_end":116876,"line_start":433,"line_end":433,"column_start":41,"column_end":51},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":901},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":117924,"byte_end":117939,"line_start":475,"line_end":475,"column_start":10,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":118104,"byte_end":118119,"line_start":483,"line_end":483,"column_start":37,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":942},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":118762,"byte_end":118779,"line_start":507,"line_end":507,"column_start":10,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":119108,"byte_end":119125,"line_start":521,"line_end":521,"column_start":37,"column_end":54},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":953},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":124109,"byte_end":124114,"line_start":665,"line_end":665,"column_start":48,"column_end":53},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1896},"to":{"krate":20,"index":1777}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":124421,"byte_end":124440,"line_start":679,"line_end":679,"column_start":34,"column_end":53},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":980},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":125687,"byte_end":125707,"line_start":718,"line_end":718,"column_start":34,"column_end":54},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":992},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":126297,"byte_end":126322,"line_start":740,"line_end":740,"column_start":37,"column_end":62},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1003},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":126883,"byte_end":126906,"line_start":761,"line_end":761,"column_start":35,"column_end":58},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1010},"to":{"krate":20,"index":1757}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":127474,"byte_end":127497,"line_start":780,"line_end":780,"column_start":34,"column_end":57},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1021},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":128203,"byte_end":128226,"line_start":802,"line_end":802,"column_start":35,"column_end":58},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1021},"to":{"krate":20,"index":1757}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":129049,"byte_end":129070,"line_start":830,"line_end":830,"column_start":38,"column_end":59},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1039},"to":{"krate":20,"index":1765}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":132298,"byte_end":132310,"line_start":921,"line_end":921,"column_start":10,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":157394,"byte_end":157399,"line_start":1609,"line_end":1609,"column_start":6,"column_end":11},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":158482,"byte_end":158487,"line_start":1649,"line_end":1649,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":161862,"byte_end":161867,"line_start":1727,"line_end":1727,"column_start":23,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1551},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":163639,"byte_end":163644,"line_start":1758,"line_end":1758,"column_start":20,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1551},"to":{"krate":20,"index":8916}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":163998,"byte_end":164004,"line_start":1776,"line_end":1776,"column_start":10,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":165413,"byte_end":165414,"line_start":1831,"line_end":1831,"column_start":10,"column_end":11},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/de.rs","byte_start":165851,"byte_end":165856,"line_start":1846,"line_end":1846,"column_start":10,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":167944,"byte_end":167953,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":181488,"byte_end":181496,"line_start":459,"line_end":459,"column_start":23,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2053},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":181920,"byte_end":181931,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/tokens.rs","byte_start":182774,"byte_end":182779,"line_start":509,"line_end":509,"column_start":10,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":210715,"byte_end":210722,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211495,"byte_end":211502,"line_start":80,"line_end":80,"column_start":39,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2068},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":211766,"byte_end":211780,"line_start":88,"line_end":88,"column_start":43,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1293},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.10/src/spanned.rs","byte_start":213216,"byte_end":213223,"line_start":133,"line_end":133,"column_start":44,"column_end":51},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2068},"to":{"krate":20,"index":2100}}]}